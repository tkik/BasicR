[{"path":"https://tkik.github.io/BasicR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Sean Davis Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"numeric-and-integer","dir":"Articles","previous_headings":"Primitive types","what":"Numeric and integer","title":"R Data types","text":"R non-declarative. means don’t declare type variables creating . also means class (type) variables assigned automatically! [1] “numeric” [1] “integer” Change class variable - coercing [1] “integer” [1] “numeric” [1] 1 [1] 1 [1] 2","code":"x <- 1 y <- 2L  cat(\"R is non-declarative. It means we don't have to declare the type of variables before creating them. \\n It also means that the class (type) of the variables will be assigned automatically!\") class(x) class(y) cat(\"Change the class of a variable - coercing \\n\") class(as.integer(x)) z <- 1.314 v <- 1.678 v2 <- 2.1 class(z) print(as.integer(z)) print(as.integer(v)) print(as.integer(v2))"},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"character","dir":"Articles","previous_headings":"Primitive types","what":"Character","title":"R Data types","text":"","code":"a <- \"a\" a1 <- 'b'  b <- \"The red fox\" class(a) ## [1] \"character\" class(a1) ## [1] \"character\" class(b) ## [1] \"character\" #\"Careful!\" c <- \"1\" class(c) ## [1] \"character\""},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"logical","dir":"Articles","previous_headings":"Primitive types","what":"Logical","title":"R Data types","text":"","code":"a <- TRUE b <- FALSE  print(a) ## [1] TRUE class(a) ## [1] \"logical\" #BUT!  c <- \"TRUE\"  class(c) ## [1] \"character\" print(as.integer(a)) ## [1] 1 print(as.integer(b)) ## [1] 0 a <- as.logical(0L) b <- as.logical(1) print(a) ## [1] FALSE print(b) ## [1] TRUE"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"operations-with-primitive-types","dir":"Articles","previous_headings":"Primitive types","what":"Operations with primitive types","title":"R Data types","text":"","code":"num1 <- 15.12 num2 <- 6.54 num3 <- 1  char1 <- \"a\" char2 <- \"b\" char3 <- \"1\"  logic1 <- TRUE logic2 <- FALSE  num1+num2 ## [1] 21.66 num1-num2 ## [1] 8.58 num1*num2 ## [1] 98.8848 num1/num2 ## [1] 2.311927 num2^2 ## [1] 42.7716 num1%%num2 ## [1] 2.04 num1%/%num2 ## [1] 2 try(char1+num1) ## Error in char1 + num1 : non-numeric argument to binary operator try(char3+num1) ## Error in char3 + num1 : non-numeric argument to binary operator try(as.numeric(char1)+num1) ## Warning in doTryCatch(return(expr), name, parentenv, handler): NAs introduced by ## coercion ## [1] NA try(as.numeric(char3)+num1) ## [1] 16.12 try(logic1+logic2) ## [1] 1 try(num1+logic1) ## [1] 16.12 num1<num2 ## [1] FALSE num1!=num2 ## [1] TRUE num1==num2 ## [1] FALSE try(char1<char2) ## [1] TRUE # alphabetical order  try(char1==char2) ## [1] FALSE try(char1!=char2) ## [1] TRUE #But!  try(char1>num2) ## [1] TRUE try(char1<=num3) ## [1] FALSE try(char3<=num3) ## [1] TRUE logic1<logic2 ## [1] FALSE logic1!=logic2 ## [1] TRUE logic1==logic2 ## [1] FALSE #Logical operators  TRUE & FALSE ## [1] FALSE TRUE | FALSE ## [1] TRUE !TRUE ## [1] FALSE #Depends on your computer/locale  x1 <- 0.5 - 0.3 x2 <- 0.3 - 0.1 x1 == x2 ## [1] FALSE # should use all.equal instead all.equal(x1, x2) ## [1] TRUE #concatenate characters  paste(char1, char2) ## [1] \"a b\" paste(char1, char2, sep=\"_\") ## [1] \"a_b\" paste0(char1, char2) ## [1] \"ab\""},{"path":[]},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"vectors","dir":"Articles","previous_headings":"Simple types (S3 classes)","what":"Vectors","title":"R Data types","text":"Vectors 1 dimensional collection data type. Indexing R always 1 based.","code":"#empty vector  a <- vector() a <- c()  # integer vector  a <- c(1L,2L,3L) a <- 1:3  typeof(a) ## [1] \"integer\" class(a) ## [1] \"integer\" #It can handle only one type! It will coerce the data into the most permissive type: b <- c(1,2,3)  a <- c(1L,\"two\",3L) typeof(a) ## [1] \"character\" a <- c(1L,2,3L) typeof(a) ## [1] \"double\" #vector functions  length(a) ## [1] 3 a2 <- c(a,a) #combine vectors a2 ## [1] 1 2 3 1 2 3 #compare vectors  a==b ## [1] TRUE TRUE TRUE a==a ## [1] TRUE TRUE TRUE #but! a==a2 ## [1] TRUE TRUE TRUE TRUE TRUE TRUE a <- c(TRUE, TRUE, FALSE) b <- c(TRUE, TRUE, TRUE)  a & b ## [1]  TRUE  TRUE FALSE a && b ## Warning in a && b: 'length(x) = 3 > 1' in coercion to 'logical(1)'  ## Warning in a && b: 'length(x) = 3 > 1' in coercion to 'logical(1)' ## [1] TRUE a | b ## [1] TRUE TRUE TRUE a || b ## Warning in a || b: 'length(x) = 3 > 1' in coercion to 'logical(1)' ## [1] TRUE # subsetting vectors  # Indexing is 1-based  b <- c(1,2,4, NA) a <- c(1,2,3)  a[1] ## [1] 1 b[c(1,2)] ## [1] 1 2 b[1:2] ## [1] 1 2 a[a>2] ## [1] 3 b[b>2] ## [1]  4 NA b[!is.na(b)] ## [1] 1 2 4 which(!is.na(b)) ## [1] 1 2 3 #named vectors  names(a) <- c(\"one\", \"two\", \"three\")  a ##   one   two three  ##     1     2     3 a[\"one\"] ## one  ##   1 paste(a, collapse = \",\") ## [1] \"1,2,3\" #other useful functions  sum(a) ## [1] 6 mean(a) ## [1] 2 median(a) ## [1] 2 sd(a) ## [1] 1 mean(b) ## [1] NA mean(b, na.rm = T) ## [1] 2.333333"},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"factors","dir":"Articles","previous_headings":"Simple types (S3 classes)","what":"Factors","title":"R Data types","text":"Factors R quite unique type. useful cases, experience, can source errors handled properly. used categorical variables. internally represented integers, labels. set labels fixed.","code":"a <- factor(c(\"a\", \"b\", \"c\", \"a\"), levels = c(\"a\", \"b\", \"c\", \"d\")) a ## [1] a b c a ## Levels: a b c d class(a) ## [1] \"factor\" typeof(a) ## [1] \"integer\" a[2] <- \"d\" #but! a[2] <- \"e\" ## Warning in `[<-.factor`(`*tmp*`, 2, value = \"e\"): invalid factor level, NA ## generated a <- factor(c(\"1\", \"2\", \"3\"), levels = c(\"1\", \"2\", \"3\", \"4\")) b <- factor(c(\"1\", \"4\", \"3\"), levels = c(\"1\", \"4\", \"3\", \"2\"))  as.numeric(b)==as.numeric(a) ## [1] TRUE TRUE TRUE a==b ## [1]  TRUE FALSE  TRUE sort(a) ## [1] 1 2 3 ## Levels: 1 2 3 4 sort(b) ## [1] 1 4 3 ## Levels: 1 4 3 2 as.numeric(as.character(b))==as.numeric(as.character(a)) ## [1]  TRUE FALSE  TRUE"},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"date-and-time","dir":"Articles","previous_headings":"Simple types (S3 classes)","what":"Date and time","title":"R Data types","text":"","code":"x <- as.Date(\"1971-01-01\") unclass(x) ## [1] 365 typeof(x) ## [1] \"double\" attributes(x) ## $class ## [1] \"Date\" current_date <- Sys.time() current_date ## [1] \"2022-05-18 13:43:20 UTC\" format(current_date, \"%d %b %Y\") ## [1] \"18 May 2022\" current_date <- Sys.Date()  format(current_date-1, \"%d %b %Y\") ## [1] \"17 May 2022\""},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"lists","dir":"Articles","previous_headings":"Simple types (S3 classes)","what":"Lists","title":"R Data types","text":"Similar vectors, can take lists elements. elements can different types.","code":"a <- list(c(1, 2),2,3) a ## [[1]] ## [1] 1 2 ##  ## [[2]] ## [1] 2 ##  ## [[3]] ## [1] 3 a <- list(c(1:4), \"two\", \"three\") a ## [[1]] ## [1] 1 2 3 4 ##  ## [[2]] ## [1] \"two\" ##  ## [[3]] ## [1] \"three\" a <- list(list(c(1, 2),2,3,4), \"two\", \"three\") a ## [[1]] ## [[1]][[1]] ## [1] 1 2 ##  ## [[1]][[2]] ## [1] 2 ##  ## [[1]][[3]] ## [1] 3 ##  ## [[1]][[4]] ## [1] 4 ##  ##  ## [[2]] ## [1] \"two\" ##  ## [[3]] ## [1] \"three\" #can have names  b <- list(numbers=c(1:4),letters=c(\"two\", \"three\"))   #referring to an element/subsetting  a[[1]] ## [[1]] ## [1] 1 2 ##  ## [[2]] ## [1] 2 ##  ## [[3]] ## [1] 3 ##  ## [[4]] ## [1] 4 a[[1]][[1]] ## [1] 1 2 a[[1]][[1]][1] ## [1] 1 b$letters[1] ## [1] \"two\" #functions  length(a) ## [1] 3 length(a$letters) ## [1] 0"},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"matrix","dir":"Articles","previous_headings":"Simple types (S3 classes)","what":"Matrix","title":"R Data types","text":"Data format store values matrix (rows columns). elements can primitive types. element type.","code":"letter_mat <- matrix(data=c(rep(\"a\", 3), rep(\"b\", 3)), nrow = 3)  num_mat <- matrix(1:9, nrow=3, ncol=3)  # matrix can have row names but not column names  num_mat*num_mat #element-wise multiplication ##      [,1] [,2] [,3] ## [1,]    1   16   49 ## [2,]    4   25   64 ## [3,]    9   36   81 num_mat %*% num_mat #matrix multiplication ##      [,1] [,2] [,3] ## [1,]   30   66  102 ## [2,]   36   81  126 ## [3,]   42   96  150 t(num_mat)  #Transpose ##      [,1] [,2] [,3] ## [1,]    1    2    3 ## [2,]    4    5    6 ## [3,]    7    8    9 # many other matrix specific funtions and operators  #subsetting  letter_mat[1,2] ## [1] \"b\" letter_mat[1,] ## [1] \"a\" \"b\" letter_mat[1:2] ## [1] \"a\" \"a\" letter_mat[3] ## [1] \"a\" letter_mat[,1] ## [1] \"a\" \"a\" \"a\" #combining cbind(letter_mat, num_mat) ##      [,1] [,2] [,3] [,4] [,5] ## [1,] \"a\"  \"b\"  \"1\"  \"4\"  \"7\"  ## [2,] \"a\"  \"b\"  \"2\"  \"5\"  \"8\"  ## [3,] \"a\"  \"b\"  \"3\"  \"6\"  \"9\" rbind(letter_mat, letter_mat) ##      [,1] [,2] ## [1,] \"a\"  \"b\"  ## [2,] \"a\"  \"b\"  ## [3,] \"a\"  \"b\"  ## [4,] \"a\"  \"b\"  ## [5,] \"a\"  \"b\"  ## [6,] \"a\"  \"b\" #row and column-wise operations #matrixStats package - fast!   num_mat <- matrix(runif(100), nrow=10, ncol=10)  rowMeans(num_mat) ##  [1] 0.3851638 0.6427088 0.6609717 0.3203019 0.4464088 0.5554319 0.5290633 ##  [8] 0.4225664 0.2569312 0.4657085 matrixStats::rowMeans2(num_mat) ##  [1] 0.3851638 0.6427088 0.6609717 0.3203019 0.4464088 0.5554319 0.5290633 ##  [8] 0.4225664 0.2569312 0.4657085 rowSums(num_mat) ##  [1] 3.851638 6.427088 6.609717 3.203019 4.464088 5.554319 5.290633 4.225664 ##  [9] 2.569312 4.657085 colMeans(num_mat) ##  [1] 0.3228825 0.4540523 0.4353427 0.5532767 0.5179125 0.5816021 0.5123537 ##  [8] 0.2864224 0.5966993 0.4247122 colSums(num_mat) ##  [1] 3.228825 4.540523 4.353427 5.532767 5.179125 5.816021 5.123537 2.864224 ##  [9] 5.966993 4.247122"},{"path":"https://tkik.github.io/BasicR/articles/R_data_types.html","id":"data-frame","dir":"Articles","previous_headings":"Simple types (S3 classes)","what":"Data frame","title":"R Data types","text":"2D object type. Rows columns names. columns can different element types.","code":"df <- data.frame(value=c(1,2,3), \"First name\"=as.factor(c(\"John\", \"John\", \"Peter\")), last_name=as.factor(c(\"Smith\", \"Black\", \"Rabbit\")), row.names = c(\"Patient 1\", \"Patient 2\", \"Patient 3\"))   df[1:2,] ##           value First.name last_name ## Patient 1     1       John     Smith ## Patient 2     2       John     Black df[c(TRUE, TRUE, FALSE),] ##           value First.name last_name ## Patient 1     1       John     Smith ## Patient 2     2       John     Black df[c(\"Patient 1\", \"Patient 2\"),] ##           value First.name last_name ## Patient 1     1       John     Smith ## Patient 2     2       John     Black df[-3,] ##           value First.name last_name ## Patient 1     1       John     Smith ## Patient 2     2       John     Black"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"accessors","dir":"Articles","previous_headings":"","what":"Accessors","title":"S4 classes","text":"know , look help vignette. can access data “natively”, even change , shouldn’t . ? easy screw …","code":"colData(se) ## DataFrame with 8 rows and 9 columns ##            SampleName     cell      dex    albut        Run avgLength ##              <factor> <factor> <factor> <factor>   <factor> <integer> ## SRR1039508 GSM1275862  N61311     untrt    untrt SRR1039508       126 ## SRR1039509 GSM1275863  N61311     trt      untrt SRR1039509       126 ## SRR1039512 GSM1275866  N052611    untrt    untrt SRR1039512       126 ## SRR1039513 GSM1275867  N052611    trt      untrt SRR1039513        87 ## SRR1039516 GSM1275870  N080611    untrt    untrt SRR1039516       120 ## SRR1039517 GSM1275871  N080611    trt      untrt SRR1039517       126 ## SRR1039520 GSM1275874  N061011    untrt    untrt SRR1039520       101 ## SRR1039521 GSM1275875  N061011    trt      untrt SRR1039521        98 ##            Experiment    Sample    BioSample ##              <factor>  <factor>     <factor> ## SRR1039508  SRX384345 SRS508568 SAMN02422669 ## SRR1039509  SRX384346 SRS508567 SAMN02422675 ## SRR1039512  SRX384349 SRS508571 SAMN02422678 ## SRR1039513  SRX384350 SRS508572 SAMN02422670 ## SRR1039516  SRX384353 SRS508575 SAMN02422682 ## SRR1039517  SRX384354 SRS508576 SAMN02422673 ## SRR1039520  SRX384357 SRS508579 SAMN02422683 ## SRR1039521  SRX384358 SRS508580 SAMN02422677 rowData(se) ## DataFrame with 4001 rows and 0 columns #assay(se) rowRanges(se) ## GRangesList object of length 4001: ## $ENSG00000000003 ## GRanges object with 17 ranges and 2 metadata columns: ##        seqnames            ranges strand |   exon_id       exon_name ##           <Rle>         <IRanges>  <Rle> | <integer>     <character> ##    [1]        X 99883667-99884983      - |    667145 ENSE00001459322 ##    [2]        X 99885756-99885863      - |    667146 ENSE00000868868 ##    [3]        X 99887482-99887565      - |    667147 ENSE00000401072 ##    [4]        X 99887538-99887565      - |    667148 ENSE00001849132 ##    [5]        X 99888402-99888536      - |    667149 ENSE00003554016 ##    ...      ...               ...    ... .       ...             ... ##   [13]        X 99890555-99890743      - |    667156 ENSE00003512331 ##   [14]        X 99891188-99891686      - |    667158 ENSE00001886883 ##   [15]        X 99891605-99891803      - |    667159 ENSE00001855382 ##   [16]        X 99891790-99892101      - |    667160 ENSE00001863395 ##   [17]        X 99894942-99894988      - |    667161 ENSE00001828996 ##   ------- ##   seqinfo: 722 sequences (1 circular) from an unspecified genome ##  ## ... ## <4000 more elements> #assays(se)[[1]] head(assays(se)$counts) ##                 SRR1039508 SRR1039509 SRR1039512 SRR1039513 SRR1039516 ## ENSG00000000003        679        448        873        408       1138 ## ENSG00000000005          0          0          0          0          0 ## ENSG00000000419        467        515        621        365        587 ## ENSG00000000457        260        211        263        164        245 ## ENSG00000000460         60         55         40         35         78 ## ENSG00000000938          0          0          2          0          1 ##                 SRR1039517 SRR1039520 SRR1039521 ## ENSG00000000003       1047        770        572 ## ENSG00000000005          0          0          0 ## ENSG00000000419        799        417        508 ## ENSG00000000457        331        233        229 ## ENSG00000000460         63         76         60 ## ENSG00000000938          0          0          0 head(metadata(airway_small)) ## [[1]] ## Experiment data ##   Experimenter name: Himes BE  ##   Laboratory: NA  ##   Contact information:   ##   Title: RNA-Seq transcriptome profiling identifies CRISPLD2 as a glucocorticoid responsive gene that modulates cytokine function in airway smooth muscle cells.  ##   URL: http://www.ncbi.nlm.nih.gov/pubmed/24926665  ##   PMIDs: 24926665  ##  ##   Abstract: A 226 word abstract is available. Use 'abstract' method. se@rowRanges ## GRangesList object of length 4001: ## $ENSG00000000003 ## GRanges object with 17 ranges and 2 metadata columns: ##        seqnames            ranges strand |   exon_id       exon_name ##           <Rle>         <IRanges>  <Rle> | <integer>     <character> ##    [1]        X 99883667-99884983      - |    667145 ENSE00001459322 ##    [2]        X 99885756-99885863      - |    667146 ENSE00000868868 ##    [3]        X 99887482-99887565      - |    667147 ENSE00000401072 ##    [4]        X 99887538-99887565      - |    667148 ENSE00001849132 ##    [5]        X 99888402-99888536      - |    667149 ENSE00003554016 ##    ...      ...               ...    ... .       ...             ... ##   [13]        X 99890555-99890743      - |    667156 ENSE00003512331 ##   [14]        X 99891188-99891686      - |    667158 ENSE00001886883 ##   [15]        X 99891605-99891803      - |    667159 ENSE00001855382 ##   [16]        X 99891790-99892101      - |    667160 ENSE00001863395 ##   [17]        X 99894942-99894988      - |    667161 ENSE00001828996 ##   ------- ##   seqinfo: 722 sequences (1 circular) from an unspecified genome ##  ## ... ## <4000 more elements> se@metadata ## [[1]] ## Experiment data ##   Experimenter name: Himes BE  ##   Laboratory: NA  ##   Contact information:   ##   Title: RNA-Seq transcriptome profiling identifies CRISPLD2 as a glucocorticoid responsive gene that modulates cytokine function in airway smooth muscle cells.  ##   URL: http://www.ncbi.nlm.nih.gov/pubmed/24926665  ##   PMIDs: 24926665  ##  ##   Abstract: A 226 word abstract is available. Use 'abstract' method. ###don't do this: se@rowRanges <- se@rowRanges[1:3000] se ## class: RangedSummarizedExperiment  ## dim: 4001 8  ## metadata(1): '' ## assays(1): counts ## rownames(3000): ENSG00000000003 ENSG00000000005 ... ENSG00000162951 ##   ENSG00000162959 ## rowData names(0): ## colnames(8): SRR1039508 SRR1039509 ... SRR1039520 SRR1039521 ## colData names(9): SampleName cell ... Sample BioSample se@rowRanges ## GRangesList object of length 3000: ## $ENSG00000000003 ## GRanges object with 17 ranges and 2 metadata columns: ##        seqnames            ranges strand |   exon_id       exon_name ##           <Rle>         <IRanges>  <Rle> | <integer>     <character> ##    [1]        X 99883667-99884983      - |    667145 ENSE00001459322 ##    [2]        X 99885756-99885863      - |    667146 ENSE00000868868 ##    [3]        X 99887482-99887565      - |    667147 ENSE00000401072 ##    [4]        X 99887538-99887565      - |    667148 ENSE00001849132 ##    [5]        X 99888402-99888536      - |    667149 ENSE00003554016 ##    ...      ...               ...    ... .       ...             ... ##   [13]        X 99890555-99890743      - |    667156 ENSE00003512331 ##   [14]        X 99891188-99891686      - |    667158 ENSE00001886883 ##   [15]        X 99891605-99891803      - |    667159 ENSE00001855382 ##   [16]        X 99891790-99892101      - |    667160 ENSE00001863395 ##   [17]        X 99894942-99894988      - |    667161 ENSE00001828996 ##   ------- ##   seqinfo: 722 sequences (1 circular) from an unspecified genome ##  ## ... ## <2999 more elements>"},{"path":[]},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"subsetting","dir":"Articles","previous_headings":"Methods","what":"subsetting","title":"S4 classes","text":"","code":"# subsetting is very easy, just like with a data.frame  se <- se[1:2000,]  se <- se[,1:3]  se ## class: RangedSummarizedExperiment  ## dim: 2000 3  ## metadata(1): '' ## assays(1): counts ## rownames(2000): ENSG00000000003 ENSG00000000005 ... ENSG00000092758 ##   ENSG00000092820 ## rowData names(0): ## colnames(3): SRR1039508 SRR1039509 SRR1039512 ## colData names(9): SampleName cell ... Sample BioSample"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"combining","dir":"Articles","previous_headings":"Methods","what":"Combining","title":"S4 classes","text":"","code":"rowbinded <- rbind(se, se) rowbinded ## class: RangedSummarizedExperiment  ## dim: 4000 3  ## metadata(2): '' '' ## assays(1): counts ## rownames(4000): ENSG00000000003 ENSG00000000005 ... ENSG00000092758 ##   ENSG00000092820 ## rowData names(0): ## colnames(3): SRR1039508 SRR1039509 SRR1039512 ## colData names(9): SampleName cell ... Sample BioSample colbinded <- cbind(se, se) colbinded ## class: RangedSummarizedExperiment  ## dim: 2000 6  ## metadata(2): '' '' ## assays(1): counts ## rownames(2000): ENSG00000000003 ENSG00000000005 ... ENSG00000092758 ##   ENSG00000092820 ## rowData names(0): ## colnames(6): SRR1039508 SRR1039509 ... SRR1039509 SRR1039512 ## colData names(9): SampleName cell ... Sample BioSample roi <- GRanges(seqnames=\"X\", ranges=99800000:99850000) se_1 <- subsetByOverlaps(se, roi)"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"granges-and-grangeslist","dir":"Articles","previous_headings":"","what":"Granges and GRangesList","title":"S4 classes","text":"GRanges objects store information Genomic ranges chromosome, position additional information. Offers wide range functionality. GRangesList “grouped” version GRnages, similar normal list, additional functionality. able handle strand information well.","code":"library(GenomicRanges)  gr1 <- GRanges(     seqnames = \"chr2\",     ranges = IRanges(103, 106),     strand = \"+\",     score = 5L, GC = 0.45) gr2 <- GRanges(     seqnames = c(\"chr1\", \"chr3\"),     ranges = IRanges(c(107, 113), width = 3),     strand = c(\"+\", \"-\"),     score = 3:4, GC = c(0.3, 0.5)) gr3 <- GRanges(\"chr2:102-107\")  gr4 <- makeGRangesFromDataFrame(data.frame(chr=c(\"chr1\", \"chr2\"),                                             start=c(104, 104), end=c(108, 105),                                            name=c(\"gene1\", \"gene2\")), keep.extra.columns = T, ignore.strand = T) grl <- GRangesList(\"txA\" = gr1, \"txB\" = gr2) grl ## GRangesList object of length 2: ## $txA ## GRanges object with 1 range and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr2   103-106      + |         5      0.45 ##   ------- ##   seqinfo: 3 sequences from an unspecified genome; no seqlengths ##  ## $txB ## GRanges object with 2 ranges and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr1   107-109      + |         3       0.3 ##   [2]     chr3   113-115      - |         4       0.5 ##   ------- ##   seqinfo: 3 sequences from an unspecified genome; no seqlengths #seqinfo(gr1) <- Seqinfo(genome=\"hg38\") #can have names for each row"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"accessors-1","dir":"Articles","previous_headings":"Granges and GRangesList","what":"Accessors","title":"S4 classes","text":"","code":"seqnames(gr1) ## factor-Rle of length 1 with 1 run ##   Lengths:    1 ##   Values : chr2 ## Levels(1): chr2 seqlevels(gr1) ## [1] \"chr2\" ranges(gr1) ## IRanges object with 1 range and 0 metadata columns: ##           start       end     width ##       <integer> <integer> <integer> ##   [1]       103       106         4 start(gr1) ## [1] 103 end(gr1) ## [1] 106 strand(gr1) ## factor-Rle of length 1 with 1 run ##   Lengths: 1 ##   Values : + ## Levels(3): + - * width(gr1) ## [1] 4 length(gr1) ## [1] 1 mcols(gr4) ## DataFrame with 2 rows and 1 column ##          name ##   <character> ## 1       gene1 ## 2       gene2 mcols(gr4)$name ## [1] \"gene1\" \"gene2\""},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"subsetting-1","dir":"Articles","previous_headings":"Granges and GRangesList","what":"Subsetting","title":"S4 classes","text":"","code":"#data.frame-like  gr1[1,] ## GRanges object with 1 range and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr2   103-106      + |         5      0.45 ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths gr4[1, \"name\"] ## GRanges object with 1 range and 1 metadata column: ##       seqnames    ranges strand |        name ##          <Rle> <IRanges>  <Rle> | <character> ##   [1]     chr1   104-108      * |       gene1 ##   ------- ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths # subset function subset(gr1, strand == \"+\") ## GRanges object with 1 range and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr2   103-106      + |         5      0.45 ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"splitting-and-combining","dir":"Articles","previous_headings":"Granges and GRangesList","what":"Splitting and combining","title":"S4 classes","text":"","code":"sp <- split(gr2, 1:2) split(gr4, ~ name) ## GRangesList object of length 2: ## $gene1 ## GRanges object with 1 range and 1 metadata column: ##       seqnames    ranges strand |        name ##          <Rle> <IRanges>  <Rle> | <character> ##   [1]     chr1   104-108      * |       gene1 ##   ------- ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths ##  ## $gene2 ## GRanges object with 1 range and 1 metadata column: ##       seqnames    ranges strand |        name ##          <Rle> <IRanges>  <Rle> | <character> ##   [1]     chr2   104-105      * |       gene2 ##   ------- ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths c(sp[[1]], sp[[2]]) ## GRanges object with 2 ranges and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr1   107-109      + |         3       0.3 ##   [2]     chr3   113-115      - |         4       0.5 ##   ------- ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths stack(sp, index.var=\"name\") ## GRanges object with 2 ranges and 3 metadata columns: ##       seqnames    ranges strand |  name     score        GC ##          <Rle> <IRanges>  <Rle> | <Rle> <integer> <numeric> ##   [1]     chr1   107-109      + |     1         3       0.3 ##   [2]     chr3   113-115      - |     2         4       0.5 ##   ------- ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"aggregating","dir":"Articles","previous_headings":"Granges and GRangesList","what":"Aggregating","title":"S4 classes","text":"","code":"aggregate(gr2, score ~ strand, mean) ## DataFrame with 2 rows and 2 columns ##     strand     score ##   <factor> <numeric> ## 1        +         3 ## 2        -         4"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"interval-operations","dir":"Articles","previous_headings":"Granges and GRangesList","what":"Interval operations","title":"S4 classes","text":"","code":"flank(gr1, 10, both=T) ## GRanges object with 1 range and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr2    93-112      + |         5      0.45 ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths shift(gr2, 5) ## GRanges object with 2 ranges and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr1   112-114      + |         3       0.3 ##   [2]     chr3   118-120      - |         4       0.5 ##   ------- ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths resize(gr1, 20) ## GRanges object with 1 range and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr2   103-122      + |         5      0.45 ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths c(gr1, gr3) ## GRanges object with 2 ranges and 2 metadata columns: ##       seqnames    ranges strand |     score        GC ##          <Rle> <IRanges>  <Rle> | <integer> <numeric> ##   [1]     chr2   103-106      + |         5      0.45 ##   [2]     chr2   102-107      * |      <NA>        NA ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths reduce(c(gr1, gr3)) # combines the overlapping ranges ## GRanges object with 2 ranges and 0 metadata columns: ##       seqnames    ranges strand ##          <Rle> <IRanges>  <Rle> ##   [1]     chr2   103-106      + ##   [2]     chr2   102-107      * ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths reduce(c(gr1, gr3), ignore.strand=T) ## GRanges object with 1 range and 0 metadata columns: ##       seqnames    ranges strand ##          <Rle> <IRanges>  <Rle> ##   [1]     chr2   102-107      * ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"comapring-2-granges","dir":"Articles","previous_headings":"Granges and GRangesList","what":"Comapring 2 GRanges","title":"S4 classes","text":"","code":"#union(gr2, gr4)  #intersect(gr2, gr4) #setdiff(gr2, gr4)  #hits <- findOverlaps(gr2, gr4, ignore.strand=TRUE) #countOverlaps(gr2, gr4, ignore.strand=TRUE) #subsetByOverlaps(gr2, gr4)"},{"path":"https://tkik.github.io/BasicR/articles/S4_classes.html","id":"deseq2","dir":"Articles","previous_headings":"","what":"DeSeq2","title":"S4 classes","text":"","code":"library(\"dplyr\") ##  ## Attaching package: 'dplyr' ## The following object is masked from 'package:Biobase': ##  ##     combine ## The following objects are masked from 'package:GenomicRanges': ##  ##     intersect, setdiff, union ## The following object is masked from 'package:GenomeInfoDb': ##  ##     intersect ## The following objects are masked from 'package:IRanges': ##  ##     collapse, desc, intersect, setdiff, slice, union ## The following objects are masked from 'package:S4Vectors': ##  ##     first, intersect, rename, setdiff, setequal, union ## The following objects are masked from 'package:BiocGenerics': ##  ##     combine, intersect, setdiff, union ## The following object is masked from 'package:matrixStats': ##  ##     count ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union count_mat <- read.delim(\"../inst/extdata/GSE139563_Processed_data_Paracrine_Senescence.txt.gz\", skip=1) count_mat <- count_mat[,grep(\"count\", colnames(count_mat))] meta <- read.delim(\"../inst/extdata//GSE139563_Processed_data_Paracrine_Senescence.txt.gz\", header=F)  rownames(count_mat) <- meta$V1[-(1:2)] names <-  gsub(\" \", \"_\", meta[1,][-(1:2)]) colnames(count_mat) <- names[names!=\"\"]  colnames(count_mat) <- gsub(\"O\", \"0\", colnames(count_mat))  coldata <- data.frame(row.names = colnames(count_mat), tp = gsub(\"(D[[:digit:]]+)_(rep[12])\", \"\\\\1\", colnames(count_mat)),                        rep=gsub(\"(D[[:digit:]]+)_(rep[12])\", \"\\\\2\", colnames(count_mat))) |>              mutate(tp_cat=ifelse(tp %in% c(\"D0\", \"D4\"), \"early\", \"late\"))  anno_df <- data.frame(   GeneID = meta$V1[-(1:2)],   gene_name = meta$V2[-(1:2)],   stringsAsFactors = FALSE,   row.names = meta$V1[-(1:2)] )  library(\"DESeq2\") dds <- DESeqDataSetFromMatrix(countData = count_mat,                               colData = coldata,                               design = ~ tp_cat) ## Warning in DESeqDataSet(se, design = design, ignoreRank): some variables in ## design formula are characters, converting to factors dds ## class: DESeqDataSet  ## dim: 27696 8  ## metadata(1): version ## assays(1): counts ## rownames(27696): ENSG00000238009.6 ENSG00000268903.1 ... ##   ENSG00000210195.2 ENSG00000210196.2 ## rowData names(0): ## colnames(8): D0_rep1 D0_rep2 ... D10_rep1 D10_rep2 ## colData names(3): tp rep tp_cat dds <- DESeq(dds) ## estimating size factors ## estimating dispersions ## gene-wise dispersion estimates ## mean-dispersion relationship ## final dispersion estimates ## fitting model and testing res <- results(dds)  #res <- res[which(res$padj<0.05),]  ge_mat <- getVarianceStabilizedData(dds) library(Glimma) glMDSPlot(ge_mat,  groups=coldata$tp, labels=rownames(coldata), launch=T, folder = \"/glimma-plots\", html = \"MDS-Plot_full\") glMDPlot(res, counts=ge_mat, groups = dds@colData[,\"tp\"], anno=anno_df, main = \"Results\", status = as.numeric(res$padj<0.05), launch = T, folder = \"/glimma-plots\" , transform = F) library(pheatmap)   pheatmap(ge_mat[rownames(res)[which(res$padj<0.05)],]) pheatmap(ge_mat[rownames(res)[which(res$padj<0.05)],], scale = \"row\", show_rownames = F, annotation_col = coldata) library(clusterProfiler) ## ## clusterProfiler v4.4.1  For help: https://yulab-smu.top/biomedical-knowledge-mining-book/ ##  ## If you use clusterProfiler in published research, please cite: ## T Wu, E Hu, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo, and G Yu. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141 ##  ## Attaching package: 'clusterProfiler' ## The following object is masked from 'package:IRanges': ##  ##     slice ## The following object is masked from 'package:S4Vectors': ##  ##     rename ## The following object is masked from 'package:stats': ##  ##     filter library(org.Hs.eg.db) ## Loading required package: AnnotationDbi ##  ## Attaching package: 'AnnotationDbi' ## The following object is masked from 'package:clusterProfiler': ##  ##     select ## The following object is masked from 'package:dplyr': ##  ##     select ## ego <- enrichGO(gene          = gsub(\"(ENSG[[:digit:]]*)(\\\\.[[:digit:]]+)\", \"\\\\1\", rownames(res))[which(res$padj<0.05)],                 universe      = gsub(\"(ENSG[[:digit:]]*)(\\\\.[[:digit:]]+)\", \"\\\\1\", rownames(res)),                 OrgDb         = org.Hs.eg.db,                 keyType = \"ENSEMBL\",                 ont           = \"MF\",                 pAdjustMethod = \"BH\",                 pvalueCutoff  = 0.01,                 qvalueCutoff  = 0.05,         readable      = TRUE)"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"statistical-tests","dir":"Articles","previous_headings":"","what":"STATISTICAL TESTS","title":"Statistics","text":"Statistical tests used test assertions populations. aim determine whether enough evidence reject null hypothesis. shown way p-values. works continuous data? interpret p-value? normal continuous data one two groups interest, t-test (paired unpaired) used compare means. non-normal data, non-parametric tests Wilcoxon Test used compares ranks. three groups, ANOVA method (normal data) compares means help variance calculations groups within groups. Kruskal-Wallis test (non-normal data) compare ranks non-normal data calculations groups within groups. categorical data, chi-squared test shows observed values sub-category differ expected values chance .","code":"library(tidyverse) #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── #> ✔ ggplot2 3.3.6     ✔ purrr   0.3.4 #> ✔ tibble  3.1.7     ✔ dplyr   1.0.9 #> ✔ tidyr   1.2.0     ✔ stringr 1.4.0 #> ✔ readr   2.1.2     ✔ forcats 0.5.1 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() if (!require(\"openintro\", quietly = TRUE))     install.packages(\"openintro\") hip<-read.csv(\"../inst/extdata/hip_data.csv\") summary(hip) #>        id            sex                 age           retired       #>  Min.   :  1.0   Length:708         Min.   :31.00   Min.   :0.0000   #>  1st Qu.:177.8   Class :character   1st Qu.:66.00   1st Qu.:0.0000   #>  Median :354.5   Mode  :character   Median :75.00   Median :1.0000   #>  Mean   :354.5                      Mean   :73.52   Mean   :0.5709   #>  3rd Qu.:531.2                      3rd Qu.:82.00   3rd Qu.:1.0000   #>  Max.   :708.0                      Max.   :99.00   Max.   :1.0000   #>                                                     NA's   :454      #>       ohs0            ohs6          ohsdiff          EQ5D0         #>  Min.   : 0.00   Min.   : 6.00   Min.   :-43.0   Min.   :-0.5940   #>  1st Qu.:13.00   1st Qu.:33.00   1st Qu.:-26.0   1st Qu.: 0.0550   #>  Median :20.00   Median :42.00   Median :-19.0   Median : 0.5160   #>  Mean   :20.03   Mean   :38.63   Mean   :-18.6   Mean   : 0.3804   #>  3rd Qu.:26.00   3rd Qu.:46.00   3rd Qu.:-12.0   3rd Qu.: 0.6910   #>  Max.   :46.00   Max.   :48.00   Max.   : 19.0   Max.   : 1.0000   #>                                                  NA's   :18        #>      height          weight       satisfaction         bmi          #>  Min.   :1.080   Min.   : 44.0   Min.   :  0.00   Min.   : 0.0022   #>  1st Qu.:1.603   1st Qu.: 65.0   1st Qu.: 90.00   1st Qu.:23.4509   #>  Median :1.660   Median : 74.0   Median :100.00   Median :26.3465   #>  Mean   :1.667   Mean   : 76.1   Mean   : 89.22   Mean   :26.4614   #>  3rd Qu.:1.740   3rd Qu.: 86.0   3rd Qu.:100.00   3rd Qu.:30.3692   #>  Max.   :1.970   Max.   :186.0   Max.   :100.00   Max.   :63.4431   #>  NA's   :370     NA's   :359     NA's   :52       NA's   :359       #>   bmi_imputed           ethnic           side              imdscore     #>  Min.   : 0.00225   Min.   :0.0000   Length:708         Min.   : 0.92   #>  1st Qu.:23.26808   1st Qu.:0.0000   Class :character   1st Qu.: 7.07   #>  Median :26.68621   Median :0.0000   Mode  :character   Median :11.07   #>  Mean   :26.74399   Mean   :0.1501                      Mean   :13.82   #>  3rd Qu.:30.82529   3rd Qu.:0.0000                      3rd Qu.:18.86   #>  Max.   :63.44307   Max.   :1.0000                      Max.   :48.05   #>                     NA's   :355                         NA's   :11"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"two-sample-t-test-or-wilcoxon-rank-tests","dir":"Articles","previous_headings":"STATISTICAL TESTS","what":"Two-sample T-test or Wilcoxon-rank tests","title":"Statistics","text":"T-tests Wilcoxon-rank tests can used describe association two continuous variables.","code":""},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"unpaired-tests","dir":"Articles","previous_headings":"STATISTICAL TESTS > Two-sample T-test or Wilcoxon-rank tests","what":"Unpaired tests","title":"Statistics","text":"Explore distributions ages men women    unpaired t-test looks whether means continuous variables differs two groups. example see whether association average age men average age women. can get means estimate p-value p.value using accessor $. indicates difference mean age men women -3.9420512, difference significant p.value 7.5210^{-6} p-value t-test can added boxplots using stat_compare_means library ggpubr.  However, check distribution age men women separately using histogram qq-plot. look normally distributed.   Instead t-test, one use Wilcoxon rank-sum test. indicates difference median age men women -4, difference significant p.value 4.8910^{-6} Similarly, add p-value boxplots using stat_compare_means library ggpubr. Wilcox-test default method, need add argument funciton.","code":"hip %>% filter(!is.na(sex)) %>% ggplot(aes(sex,age)) + geom_boxplot() hip %>% filter(!is.na(sex)) %>% ggplot(aes(sex,height)) + geom_boxplot() #> Warning: Removed 369 rows containing non-finite values (stat_boxplot). hip %>%    select(height, weight, sex) %>%     filter(!is.na(sex)) %>%    pivot_longer(cols = c(height, weight)) %>%   ggplot()+geom_boxplot(aes(sex, log10(value), fill=name)) #> Warning: Removed 727 rows containing non-finite values (stat_boxplot). library(broom) t<-t.test(age~sex,data=hip %>% filter(!is.na(sex))) t #>  #>  Welch Two Sample t-test #>  #> data:  age by sex #> t = 4.5196, df = 578.32, p-value = 7.517e-06 #> alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 #> 95 percent confidence interval: #>  2.228963 5.655140 #> sample estimates: #> mean in group Female   mean in group Male  #>             75.05275             71.11070 tidy(t) #> # A tibble: 1 × 10 #>   estimate estimate1 estimate2 statistic    p.value parameter conf.low conf.high #>      <dbl>     <dbl>     <dbl>     <dbl>      <dbl>     <dbl>    <dbl>     <dbl> #> 1     3.94      75.1      71.1      4.52 0.00000752      578.     2.23      5.66 #> # … with 2 more variables: method <chr>, alternative <chr>  t$estimate #> mean in group Female   mean in group Male  #>             75.05275             71.11070 t$p.value #> [1] 7.516598e-06 library(ggpubr) hip %>% filter(!is.na(sex)) %>% ggplot(aes(sex,age)) + geom_boxplot() + stat_compare_means(method = \"t.test\") hip %>% filter(!is.na(sex)) %>% ggplot(aes(age, fill=sex)) + facet_grid(~sex) + geom_histogram() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. hip %>% filter(!is.na(sex)) %>% ggplot(aes(sample=scale(age), fill=sex)) + facet_grid(~sex) + geom_qq() + geom_abline() w<-wilcox.test(age~sex,data=hip %>% filter(!is.na(sex))) w #>  #>  Wilcoxon rank sum test with continuity correction #>  #> data:  age by sex #> W = 71138, p-value = 4.889e-06 #> alternative hypothesis: true location shift is not equal to 0  est<-hip %>% filter(!is.na(sex)) %>% group_by(sex) %>% summarize(median=median(age,na.rm=TRUE)) est #> # A tibble: 2 × 2 #>   sex    median #>   <chr>   <dbl> #> 1 Female     77 #> 2 Male       73 hip %>% filter(!is.na(sex)) %>% ggplot(aes(sex,age)) + geom_boxplot() + stat_compare_means()"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"paired-tests","dir":"Articles","previous_headings":"STATISTICAL TESTS > Two-sample T-test or Wilcoxon-rank tests","what":"Paired tests","title":"Statistics","text":"paired t-test used compare difference repeated measures individuals. example, dataset, Performance baseline 6-months given ohs0 ohs6. Use paired t-test analyse difference distributions. Note extra paired argument t.test function. Use using accessor $ pull extract relevant variables. indicates difference mean performance baseline 6 months -18.6045198, difference highly significant. Calculate difference performances 2 time points use histogram represent distribution. Use geom_vline draw dotted line 0 represent Null distribution.  non-parametric version Wilcoxon signed-rank test, also significant.","code":"t<-t.test(hip$ohs0,hip$ohs6, paired=TRUE) t #>  #>  Paired t-test #>  #> data:  hip$ohs0 and hip$ohs6 #> t = -45.865, df = 707, p-value < 2.2e-16 #> alternative hypothesis: true mean difference is not equal to 0 #> 95 percent confidence interval: #>  -19.40091 -17.80813 #> sample estimates: #> mean difference  #>       -18.60452  t$estimate #> mean difference  #>       -18.60452 t$p.value #> [1] 4.551803e-214 hip %>% mutate(diff=ohs6-ohs0) %>% ggplot(aes(diff)) + geom_histogram() +  geom_vline(xintercept = 0, lty=2)  #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. w<-wilcox.test(hip$ohs0,hip$ohs6,paired=TRUE) w #>  #>  Wilcoxon signed rank test with continuity correction #>  #> data:  hip$ohs0 and hip$ohs6 #> V = 2850, p-value < 2.2e-16 #> alternative hypothesis: true location shift is not equal to 0  w$p.value #> [1] 2.184776e-111"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"anova-analysis-of-variance","dir":"Articles","previous_headings":"STATISTICAL TESTS","what":"ANOVA (Analysis of Variance)","title":"Statistics","text":"one-way ANOVA can used two groups. example split variable satisfaction 3 groups. Run ANOVA test relationship age satisfaction.cat suggests little evidence satisfaction groups different respect age. p-value 0.228","code":"hip<-hip %>% mutate(satisfaction.cat=factor(ifelse(satisfaction<80,\"Low\",ifelse(between(satisfaction,80,90),\"Medium\",\"High\")), levels=c(\"Low\",\"Medium\",\"High\")))  hip %>% pull(satisfaction.cat) %>% table() #> . #>    Low Medium   High  #>     87    185    384 a<-aov(age~satisfaction.cat,data=hip)  s<-summary(a)  s #>                   Df Sum Sq Mean Sq F value Pr(>F) #> satisfaction.cat   2    396   198.2   1.482  0.228 #> Residuals        653  87324   133.7                #> 52 observations deleted due to missingness"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"chi-squared-test","dir":"Articles","previous_headings":"STATISTICAL TESTS","what":"Chi-squared test","title":"Statistics","text":"look association two categorical variables can perform chi squared test Study relationshipo sex satisfaction.cat using contingency table bar plot.  Use prop.table geom_bar(stat=\"identity\") report relative frequencies satisfaction sexes.  Test relationship using chi.test command contingency table. relative risks close 1. Alongwith test, indicates little evidence relationship satisfaction.cat sex, p.value 0.8674.","code":"hip %>% filter(!is.na(satisfaction.cat))  %>% filter(!is.na(sex)) %>% ggplot(aes(sex,fill=satisfaction.cat)) + geom_bar(position=\"dodge\") t <- hip %>% select(sex,satisfaction.cat) %>% table() t #>         satisfaction.cat #> sex      Low Medium High #>   Female  55    116  233 #>   Male    32     69  150 p<-prop.table(t, margin =1)  p %>% as.data.frame() %>% ggplot(aes(x=sex,y=Freq,fill=satisfaction.cat)) + geom_bar(stat=\"identity\") c<-chisq.test(t) c #>  #>  Pearson's Chi-squared test #>  #> data:  t #> X-squared = 0.28454, df = 2, p-value = 0.8674"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"exercise","dir":"Articles","previous_headings":"STATISTICAL TESTS","what":"Exercise","title":"Statistics","text":"Check whether difference performance baseline ohs0 males females. Study distributions decide test use. used ANOVA study distribution satisfaction.cat age. Check distribution age 3 satisfaction.cat groups. pass normality assumptions? unsure, use Kruskal-Wallis test. Hint can get information using ?kruskal.test. Use ANOVA Kruskal-Wallis test check association baseline ohs0 satisfaction.cat groups. Create table retired satisfaction groups. chi-square test show association two?","code":""},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"linear-associations","dir":"Articles","previous_headings":"","what":"Linear associations","title":"Statistics","text":"data ’re working openintro package ’s called hfi, short Human Freedom Index. type plot use display relationship personal freedom score, pf_score, pf_expression_control? Plot relationship using variable pf_expression_control predictor. relationship look linear? knew country’s pf_expression_control, score 10, 0 , political pressures controls media content, comfortable using linear model predict personal freedom score? relationship looks linear, can quantify strength relationship correlation coefficient.  Correlation causation!!!","code":"hfi_2016 <- hfi %>%    filter(year == 2016)   hfi_2016 %>%    ggplot()+geom_point(aes(pf_expression_control, pf_score)) hfi_2016 %>%   summarise(cor(pf_expression_control, pf_score)) #> # A tibble: 1 × 1 #>   `cor(pf_expression_control, pf_score)` #>                                    <dbl> #> 1                                  0.845"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"linear-regression","dir":"Articles","previous_headings":"","what":"Linear regression","title":"Statistics","text":"first argument function lm() formula takes form y ~ x. output lm() object contains information need linear model just fit. can access information using tidy() function. Let’s consider output piece piece. First, formula used describe model shown top, ’s displayed “Call”. formula find five-number summary residuals. “Coefficients” table shown next key; first column displays linear model’s y-intercept coefficient pf_expression_control. table, can write least squares regression line linear model: \\[   \\hat{y} = 4.28 + 0.542 \\times pf\\_expression\\_control \\] equation tells us two things: countries pf_expression_control 0 (largest amount political pressure media content), expect mean personal freedom score 4.28. every 1 unit increase pf_expression_control, expect country’s mean personal freedom score increase 0.542 units. can assess model fit using \\(R^2\\), proportion variability response variable explained explanatory variable. use glance() function access information. model, 71.4% variability pf_score explained pf_expression_control.","code":"m1 <- lm(pf_score ~ pf_expression_control, data = hfi_2016) tidy(m1) #> # A tibble: 2 × 5 #>   term                  estimate std.error statistic  p.value #>   <chr>                    <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)              4.28     0.149       28.8 4.23e-65 #> 2 pf_expression_control    0.542    0.0271      20.0 2.31e-45 summary(m1) #>  #> Call: #> lm(formula = pf_score ~ pf_expression_control, data = hfi_2016) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.65911 -0.49491  0.04574  0.52073  1.59064  #>  #> Coefficients: #>                       Estimate Std. Error t value Pr(>|t|)     #> (Intercept)             4.2838     0.1490   28.75   <2e-16 *** #> pf_expression_control   0.5419     0.0271   19.99   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.7993 on 160 degrees of freedom #> Multiple R-squared:  0.7141, Adjusted R-squared:  0.7123  #> F-statistic: 399.7 on 1 and 160 DF,  p-value: < 2.2e-16 glance(m1) #> # A tibble: 1 × 12 #>   r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC #>       <dbl>         <dbl> <dbl>     <dbl>    <dbl> <dbl>  <dbl> <dbl> <dbl> #> 1     0.714         0.712 0.799      400. 2.31e-45     1  -193.  391.  400. #> # … with 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"prediction-and-prediction-errors","dir":"Articles","previous_headings":"Linear regression","what":"Prediction and prediction errors","title":"Statistics","text":"Let’s create scatterplot least squares line m1 laid top.  , literally adding layer top plot. geom_smooth creates line fitting linear model. can also show us standard error se associated line, ’ll suppress now. line can used predict \\(y\\) value \\(x\\). predictions made values \\(x\\) beyond range observed data, referred extrapolation usually recommended. However, predictions made within range data reliable. ’re also used compute residuals.","code":"ggplot(data = hfi_2016, aes(x = pf_expression_control, y = pf_score)) +   geom_point() +   geom_smooth(method = \"lm\", se = FALSE) #> `geom_smooth()` using formula 'y ~ x'"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"model-diagnostics","dir":"Articles","previous_headings":"Linear regression","what":"Model diagnostics","title":"Statistics","text":"assess whether linear model reliable, need check (1) linearity, (2) nearly normal residuals, (3) constant variability. order checks need access fitted (predicted) values residuals. can use augment() function calculate . ###Linearity### already checked relationship pf_score pf_expression_control linear using scatterplot. also verify condition plot residuals vs. fitted (predicted) values.  Notice m1 can also serve data set stored within fitted values (\\(\\hat{y}\\)) residuals. Also note ’re getting fancy code . creating scatterplot first layer (first line code), overlay red horizontal dashed line \\(y = 0\\) (help us check whether residuals distributed around 0), also rename axis labels informative. apparent pattern residuals plot? indicate linearity relationship two variables? ###Nearly normal residuals### check condition, can look histogram residuals.  Based histogram, nearly normal residuals condition appear violated? ?","code":"m1_aug <- augment(m1) ggplot(data = m1_aug, aes(x = .fitted, y = .resid)) +   geom_point() +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +   xlab(\"Fitted values\") +   ylab(\"Residuals\") ggplot(data = m1_aug, aes(x = .resid)) +   geom_histogram(binwidth = 0.25) +   xlab(\"Residuals\")"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"constant-variability","dir":"Articles","previous_headings":"Linear regression > Model diagnostics","what":"Constant variability","title":"Statistics","text":"Based residuals vs. fitted plot, constant variability condition appear violated? ?","code":"ggplot(data = m1_aug, aes(x = .fitted, y = .std.resid)) +   geom_point() +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +   xlab(\"Fitted values\") +   ylab(\"SD Residuals\")"},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"exercises","dir":"Articles","previous_headings":"Linear regression","what":"EXERCISES","title":"Statistics","text":"1. Fit new model uses pf_expression_control predict hf_score, total human freedom score. Using estimates R output, write equation regression line. slope tell us context relationship human freedom amount political pressure media content? 2. someone saw least squares regression line actual data, predict country’s hf_score one 3 rating pf_expression_control? overestimate underestimate, much? words, residual prediction? 3. relationship compare relationship pf_score pf_expression_control? Use \\(R^2\\) values two model summaries compare. pf_expression_control seem predict hf_score better? ? 4. Check model diagnostics using appropriate visualisations evaluate model conditions met. 5. Pick another pair variables interest visualise relationship . find relationship surprising expected. Discuss interested variables /surprised relationship observed.","code":""},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"multivariable-regression","dir":"Articles","previous_headings":"","what":"MULTIVARIABLE REGRESSION","title":"Statistics","text":"Source","code":""},{"path":"https://tkik.github.io/BasicR/articles/Statistics.html","id":"exercises-1","dir":"Articles","previous_headings":"MULTIVARIABLE REGRESSION","what":"EXERCISES","title":"Statistics","text":"1. Copy model previous exercise uses pf_expression_control predict Human Freedom hf_score. Using tidy command, slope tell us context relationship human freedom expression control country? 2. Add region model Q1 using lm(hf_score ~ pf_expression_control + region, data = hfi_2016). notice slope human freedom expression control? changed previous model. think region confounder, think reasons might ? 3. Compare \\(R^2\\) 2 models Q1 Q2. increase adding region? Think definition \\(R^2\\). mean context? 4. Fit new model uses ef_money monetary measure predict hf_score. slope tell us context relationship human freedom economy country? 5. add region model Q4. Compare slope \\(R^2\\) model Q4. 6. Finally fit model ef_money pf_expression_control exposures hf_score outcome. Compare slope \\(R^2\\) models Q1. ef_money confounder? 7. Use linear regression model (scatter plot) ef_money exposure pf_expression_control outcome, study whether ef_money association pf_expression_control well. might validate finding ef_money confounder pf_expression_control exposure hf_score outcome Q6.","code":""},{"path":"https://tkik.github.io/BasicR/articles/Statstics_solutions.html","id":"exercise","dir":"Articles","previous_headings":"","what":"Exercise","title":"Statistics_solutions","text":"Check whether difference performance baseline (ohs0) males females. Study distributions decide test use. used ANOVA study distribution satisfaction.cat age. Check distribution age 3 satisfaction.cat groups. pass normality assumptions? unsure, use Kruskal-Wallis test. Hint can get information using ?kruskal.test. Use ANOVA Kruskal-Wallis test check association baseline ohs0 satisfaction.cat groups. Create table retired satisfaction groups. chi-square test show association two?   1. Fit new model uses pf_expression_control predict hf_score, total human freedom score. slope tell us context relationship human freedom amount political pressure media content? 2. relationship compare relationship pf_score pf_expression_control? Use \\(R^2\\) values two model summaries compare. pf_expression_control seem predict hf_score better? ? 3. Check model diagnostics using appropriate visualisations evaluate model conditions met. 4. Pick another pair variables interest visualise relationship . find relationship surprising expected. Discuss interested variables /surprised relationship observed.","code":"hip<-read.csv(\"../inst/extdata/hip_data.csv\")  hip %>% filter(!is.na(sex)) %>% ggplot(aes(ohs0, fill=sex)) + facet_grid(~sex) + geom_histogram() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. w<-wilcox.test(ohs0~sex,data=hip %>% filter(!is.na(sex))) w #>  #>  Wilcoxon rank sum test with continuity correction #>  #> data:  ohs0 by sex #> W = 48057, p-value = 2.962e-05 #> alternative hypothesis: true location shift is not equal to 0  hip<-hip %>% mutate(satisfaction.cat=factor(ifelse(satisfaction<80,\"Low\",ifelse(between(satisfaction,80,90),\"Medium\",\"High\")), levels=c(\"Low\",\"Medium\",\"High\")))  hip %>% filter(!is.na(satisfaction.cat)) %>% ggplot(aes(age, fill=satisfaction.cat)) + facet_grid(~satisfaction.cat) + geom_histogram() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. kr <- hip %>% filter(!is.na(satisfaction.cat)) %>%  kruskal.test(age~satisfaction.cat, data=. )  table(hip$retired, hip$satisfaction.cat) #>     #>     Low Medium High #>   0  10     28   61 #>   1  17     35   80  chisq.test(hip$retired, hip$satisfaction.cat) #>  #>  Pearson's Chi-squared test #>  #> data:  hip$retired and hip$satisfaction.cat #> X-squared = 0.44773, df = 2, p-value = 0.7994 hfi_2016 <- hfi %>%    filter(year == 2016)  m1 <- lm(hf_score ~ pf_expression_control, data = hfi_2016) m2 <- lm(pf_score ~ pf_expression_control, data = hfi_2016)  summary(m1) #>  #> Call: #> lm(formula = hf_score ~ pf_expression_control, data = hfi_2016) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.68164 -0.45467  0.05692  0.46699  1.88128  #>  #> Coefficients: #>                       Estimate Std. Error t value Pr(>|t|)     #> (Intercept)            5.05340    0.12293   41.11   <2e-16 *** #> pf_expression_control  0.36843    0.02236   16.48   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.6595 on 160 degrees of freedom #> Multiple R-squared:  0.6291, Adjusted R-squared:  0.6268  #> F-statistic: 271.4 on 1 and 160 DF,  p-value: < 2.2e-16 #   ggplot(data = hfi_2016, aes(x = pf_expression_control, y = hf_score)) +   geom_point() +   geom_smooth(method = \"lm\", se = FALSE) #> `geom_smooth()` using formula 'y ~ x' ggplot(data = hfi_2016, aes(x = pf_expression_control, y = pf_score)) +   geom_point() +   geom_smooth(method = \"lm\", se = FALSE) #> `geom_smooth()` using formula 'y ~ x' plot(m1)"},{"path":"https://tkik.github.io/BasicR/articles/Statstics_solutions.html","id":"exercises","dir":"Articles","previous_headings":"","what":"EXERCISES","title":"Statistics_solutions","text":"1. Add region model Q1 using lm(hf_score ~ pf_expression_control + region, data = hfi_2016). notice slope human freedom expression control? changed previous model. think region confounder, think reasons might ? 2. Compare \\(R^2\\) 2 models Q1 previous questions. increase adding region? Think definition \\(R^2\\). mean context? 3. Fit new model uses ef_money monetary measure predict hf_score. slope tell us context relationship human freedom economy country? 4. add region model Q3. Compare slope \\(R^2\\) model Q3. 6. Finally fit model ef_money pf_expression_control exposures hf_score outcome. Compare slope \\(R^2\\) models previous exercises. ef_money confounder? 7. Use linear regression model (scatter plot) ef_money exposure pf_expression_control outcome, study whether ef_money association pf_expression_control well. might validate finding ef_money confounder pf_expression_control exposure hf_score outcome Q6.","code":"tidy(m1) #> # A tibble: 2 × 5 #>   term                  estimate std.error statistic  p.value #>   <chr>                    <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)              5.05     0.123       41.1 5.97e-87 #> 2 pf_expression_control    0.368    0.0224      16.5 2.73e-36 m2 <- lm(hf_score ~ pf_expression_control + region, data = hfi_2016) summary(m1) #>  #> Call: #> lm(formula = hf_score ~ pf_expression_control, data = hfi_2016) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.68164 -0.45467  0.05692  0.46699  1.88128  #>  #> Coefficients: #>                       Estimate Std. Error t value Pr(>|t|)     #> (Intercept)            5.05340    0.12293   41.11   <2e-16 *** #> pf_expression_control  0.36843    0.02236   16.48   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.6595 on 160 degrees of freedom #> Multiple R-squared:  0.6291, Adjusted R-squared:  0.6268  #> F-statistic: 271.4 on 1 and 160 DF,  p-value: < 2.2e-16 summary(m2) #>  #> Call: #> lm(formula = hf_score ~ pf_expression_control + region, data = hfi_2016) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -1.9030 -0.2887  0.0179  0.2704  1.6497  #>  #> Coefficients: #>                                     Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                          6.05229    0.23549  25.701  < 2e-16 *** #> pf_expression_control                0.27471    0.02585  10.627  < 2e-16 *** #> regionEast Asia                      0.24054    0.32845   0.732 0.465094     #> regionEastern Europe                -0.10177    0.26736  -0.381 0.703991     #> regionLatin America & the Caribbean -0.56663    0.25987  -2.180 0.030771 *   #> regionMiddle East & North Africa    -1.05998    0.25870  -4.097  6.8e-05 *** #> regionNorth America                  0.33030    0.46915   0.704 0.482498     #> regionOceania                       -0.13131    0.37504  -0.350 0.726741     #> regionSouth Asia                    -0.62691    0.26403  -2.374 0.018833 *   #> regionSub-Saharan Africa            -0.97208    0.24500  -3.968 0.000112 *** #> regionWestern Europe                 0.04867    0.29823   0.163 0.870570     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.5524 on 151 degrees of freedom #> Multiple R-squared:  0.7545, Adjusted R-squared:  0.7382  #> F-statistic: 46.41 on 10 and 151 DF,  p-value: < 2.2e-16  m3 <- lm(ef_money ~ pf_expression_control, data = hfi_2016) m4 <- lm(ef_money ~ pf_expression_control + region, data = hfi_2016)  m1 <- lm(hf_score ~ pf_expression_control + ef_money, data = hfi_2016)  m4 <- lm(hf_score ~  ef_money, data = hfi_2016)   ggplot(data = hfi_2016, aes(x = ef_money, y = pf_expression_control)) +   geom_point() +   geom_smooth(method = \"lm\", se = FALSE) #> `geom_smooth()` using formula 'y ~ x' m5 <- lm(pf_expression_control ~ ef_money, data = hfi_2016)"},{"path":"https://tkik.github.io/BasicR/articles/assignment.html","id":"the-tasks-based-on-exercises-from-reka","dir":"Articles","previous_headings":"","what":"The tasks based on exercises from Reka:","title":"Assignment","text":"Create workflowr project Create Markdown file analyis folder solve statistics exercises. Add following code end Rmd file set eval=TRUE (see code assignment.Rmd file): Build webpage links index.html result assignment, send zip folder","code":""},{"path":"https://tkik.github.io/BasicR/articles/assignment.html","id":"statistics-exercises","dir":"Articles","previous_headings":"","what":"Statistics exercises:","title":"Assignment","text":"Use hfi dataset openintro package Fit model uses pf_expression_control predict hf_score, total human freedom score. add region model. Compare slope \\(R^2\\) model Q8. Finally fit model ef_money pf_expression_control exposures hf_score outcome. Use linear regression model (scatter plot) ef_money exposure pf_expression_control outcome, study whether ef_money association pf_expression_control well. might validate finding ef_money confounder pf_expression_control exposure hf_score outcome Q10.","code":""},{"path":"https://tkik.github.io/BasicR/articles/basic_functions.html","id":"vocabulary","dir":"Articles","previous_headings":"","what":"Vocabulary","title":"Basic functions","text":": http://adv-r..co.nz/Vocabulary.html","code":""},{"path":"https://tkik.github.io/BasicR/articles/basic_functions.html","id":"the-basics","dir":"Articles","previous_headings":"Vocabulary","what":"The basics","title":"Basic functions","text":"","code":"# The first functions to learn ? str  # Important operators and assignment %in%, match =, <-, <<- $, [, [[, head, tail, subset with assign, get  # Comparison  all.equal, identical !=, ==, >, >=, <, <= is.na, complete.cases is.finite  # Basic math *, +, -, /, ^, %%, %/% abs, sign acos, asin, atan, atan2 sin, cos, tan ceiling, floor, round, trunc, signif exp, log, log10, log2, sqrt  max, min, prod, sum cummax, cummin, cumprod, cumsum, diff pmax, pmin range mean, median, cor, sd, var rle  # Functions to do with functions function missing on.exit return, invisible  # Logical & sets  &, |, !, xor all, any intersect, union, setdiff, setequal which  # Vectors and matrices c, matrix # automatic coercion rules character > numeric > logical length, dim, ncol, nrow cbind, rbind names, colnames, rownames t diag sweep as.matrix, data.matrix  # Making vectors  c rep, rep_len seq, seq_len, seq_along rev sample choose, factorial, combn (is/as).(character/numeric/logical/...)  # Lists & data.frames  list, unlist data.frame, as.data.frame split expand.grid  # Control flow  if, &&, || (short circuiting) for, while next, break switch ifelse  # Apply & friends lapply, sapply, vapply apply tapply replicate"},{"path":"https://tkik.github.io/BasicR/articles/basic_functions.html","id":"common-data-structures","dir":"Articles","previous_headings":"Vocabulary","what":"Common data structures","title":"Basic functions","text":"","code":"# Date time ISOdate, ISOdatetime, strftime, strptime, date difftime julian, months, quarters, weekdays library(lubridate)  # Character manipulation  grep, agrep gsub strsplit chartr nchar tolower, toupper substr paste trimws library(stringr)  # Factors  factor, levels, nlevels reorder, relevel cut, findInterval interaction options(stringsAsFactors = FALSE)  # Array manipulation array dim dimnames aperm library(abind)"},{"path":"https://tkik.github.io/BasicR/articles/basic_functions.html","id":"statistics","dir":"Articles","previous_headings":"Vocabulary","what":"Statistics","title":"Basic functions","text":"","code":"# Ordering and tabulating  duplicated, unique merge order, rank, quantile sort table, ftable  # Linear models  fitted, predict, resid, rstandard lm, glm hat, influence.measures logLik, df, deviance formula, ~, I anova, coef, confint, vcov contrasts  # Miscellaneous tests apropos(\"\\\\.test$\")  # Random variables  (q, p, d, r) * (beta, binom, cauchy, chisq, exp, f, gamma, geom,    hyper, lnorm, logis, multinom, nbinom, norm, pois, signrank, t,    unif, weibull, wilcox, birthday, tukey)  # Matrix algebra  crossprod, tcrossprod eigen, qr, svd %*%, %o%, outer rcond solve"},{"path":"https://tkik.github.io/BasicR/articles/basic_functions.html","id":"working-with-r","dir":"Articles","previous_headings":"Vocabulary","what":"Working with R","title":"Basic functions","text":"","code":"# Workspace  ls, exists, rm getwd, setwd q source install.packages, library, require  # Help help, ? help.search apropos RSiteSearch citation demo example vignette  # Debugging traceback browser recover options(error = ) stop, warning, message tryCatch, try"},{"path":"https://tkik.github.io/BasicR/articles/basic_functions.html","id":"io","dir":"Articles","previous_headings":"Vocabulary","what":"I/O","title":"Basic functions","text":"","code":"# Output print, cat message, warning dput format sink, capture.output sprintf  # Reading and writing data data count.fields read.csv, write.csv read.delim, write.delim read.fwf readLines, writeLines readRDS, saveRDS load, save library(foreign)  # Files and directories  dir basename, dirname, tools::file_ext file.path path.expand, normalizePath file.choose file.copy, file.create, file.remove, file.rename, dir.create file.exists, file.info tempdir, tempfile download.file, library(downloader)"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"control-structures-in-r","dir":"Articles","previous_headings":"","what":"Control structures in R","title":"Control structures","text":"-else statement cycles Repeat","code":""},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"if-else-statement","dir":"Articles","previous_headings":"Control structures in R","what":"If-else statement","title":"Control structures","text":"Conditional execution code. General form: Condition logical, (0,1). Else else optional, multiple else possible. statement executed first! expression true evaluated. multiple statements can true want evaluate -> nested statements. Short version ifelse().","code":"# if (<condition>){ # what to do if true #} else if (<other condition>){ # what to do if true #} else { # what to do if none of them are true #} #"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"for-cycle","dir":"Articles","previous_headings":"Control structures in R","what":"For cycle","title":"Control structures","text":"Iteration, repeat behaviour. want repeat command set values variables. value iterating variable () automatically changing every cycle. iterating variable can also logical, character, list element. return value iterating variable cycle run last.","code":"# for (i in 1:10) { # print(i) # }"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"while","dir":"Articles","previous_headings":"Control structures in R","what":"While","title":"Control structures","text":"statements repeat task condition met. Can easily infinite, careful.","code":"# count <- 0 # while(count < 10) { #         print(count) #         count <- count + 1 # }  ##DO NOT RUN##  # count <- 0 # while(count < 10) { #         print(count) #         count <- count - 1 # }"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"repeat","dir":"Articles","previous_headings":"Control structures in R","what":"Repeat","title":"Control structures","text":"Repeat repeat expression infinite loop. stop, break command used. Can dangerous.","code":"#count <- 1 # repeat { #         count <- count + 1 # if (count >10) #break # }"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"break-and-next","dir":"Articles","previous_headings":"Control structures in R","what":"break and next","title":"Control structures","text":"seen , break breaks whole loop exits. next breaks current iteration loop continues.","code":"# for (i in 1:10) { # if (i==5) # next # print(i) # }"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Control structures","text":"Bingo! Useful functions: print(), browser()","code":"for (i in 1:10) {    a <- i*2   #browser()    print(i)  } ## [1] 1 ## [1] 2 ## [1] 3 ## [1] 4 ## [1] 5 ## [1] 6 ## [1] 7 ## [1] 8 ## [1] 9 ## [1] 10"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"special-looping-functions","dir":"Articles","previous_headings":"","what":"Special looping functions","title":"Control structures","text":"Widely used functions: apply, lapply, sapply, tapply","code":""},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"apply","dir":"Articles","previous_headings":"Special looping functions","what":"apply()","title":"Control structures","text":"works 2D objects (data.frame, matrix) iterates around rows columns returns vectors","code":"dt <- data.frame(mes1=c(2,3,4), mes2=c(3,2,1), mes3=c(2,4,6)) rowmean <- apply(dt, 1, mean) rowmean ## [1] 2.333333 3.000000 3.666667 colmean <- apply(dt, 2, mean) colmean ## mes1 mes2 mes3  ##    3    2    4"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"lapply","dir":"Articles","previous_headings":"Special looping functions","what":"lapply()","title":"Control structures","text":"Works lists Iterates around list elements Returns list","code":"lt <- list(c(1,2,4), c(4,52,5,3,2), c(2,3,5,2,2)) lt2 <- lapply(lt, mean)  for (i in 1:length(lt)){   print(length(lt[[i]])) } ## [1] 3 ## [1] 5 ## [1] 5"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"tapply","dir":"Articles","previous_headings":"Special looping functions","what":"tapply()","title":"Control structures","text":"Works subsettable objects (e.g. vector) Subsets index applies function Returns list One can use aggregate() instead","code":"data(iris) tapply(iris$Sepal.Width, iris$Species, median) ##     setosa versicolor  virginica  ##        3.4        2.8        3.0"},{"path":"https://tkik.github.io/BasicR/articles/control_structures.html","id":"sapply-vapply","dir":"Articles","previous_headings":"Special looping functions","what":"sapply(), vapply()","title":"Control structures","text":"Similar lapply Returns lists, matrices, vectors arrays.","code":"i39 <- sapply(3:9, seq) # list of vectors sapply(i39, fivenum) ##      [,1] [,2] [,3] [,4] [,5] [,6] [,7] ## [1,]  1.0  1.0    1  1.0  1.0  1.0    1 ## [2,]  1.5  1.5    2  2.0  2.5  2.5    3 ## [3,]  2.0  2.5    3  3.5  4.0  4.5    5 ## [4,]  2.5  3.5    4  5.0  5.5  6.5    7 ## [5,]  3.0  4.0    5  6.0  7.0  8.0    9 vapply(i39, fivenum,        c(Min. = 0, \"1st Qu.\" = 0, Median = 0, \"3rd Qu.\" = 0, Max. = 0)) ##         [,1] [,2] [,3] [,4] [,5] [,6] [,7] ## Min.     1.0  1.0    1  1.0  1.0  1.0    1 ## 1st Qu.  1.5  1.5    2  2.0  2.5  2.5    3 ## Median   2.0  2.5    3  3.5  4.0  4.5    5 ## 3rd Qu.  2.5  3.5    4  5.0  5.5  6.5    7 ## Max.     3.0  4.0    5  6.0  7.0  8.0    9"},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"clean-data","dir":"Articles","previous_headings":"","what":"Clean data:","title":"Data cleaning with Tidyverse","text":"one information, one variable one row per observation data type matches name categories clean factors, necessary Exercise Clean following dataset: messy_data.xlsx messy_data.txt","code":"library(tidyverse) #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── #> ✔ ggplot2 3.3.6     ✔ purrr   0.3.4 #> ✔ tibble  3.1.7     ✔ dplyr   1.0.9 #> ✔ tidyr   1.2.0     ✔ stringr 1.4.0 #> ✔ readr   2.1.2     ✔ forcats 0.5.1 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() library(nycflights13) library(magrittr) #>  #> Attaching package: 'magrittr' #> The following object is masked from 'package:purrr': #>  #>     set_names #> The following object is masked from 'package:tidyr': #>  #>     extract"},{"path":[]},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"pipes","dir":"Articles","previous_headings":"Tidyverse","what":"Pipes","title":"Data cleaning with Tidyverse","text":"","code":"## A single command sqrt(83) #> [1] 9.110434  ## Base R method of running more than one command round(sqrt(83), digit = 2) #> [1] 9.11  sqrt(83) %>% round(digit = 2) #> [1] 9.11"},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"dplyr","dir":"Articles","previous_headings":"Tidyverse","what":"Dplyr","title":"Data cleaning with Tidyverse","text":"select() extracts columns returns tibble. arrange() changes ordering rows. filter() picks cases based values. mutate() adds new variables functions existing variables. rename() easily changes name column(s) summarise() reduces multiple values single summary. group_by() groups observations pull() extracts single column vector. _join() group functions merge two data frames together, includes (inner_join(), left_join(), right_join(), full_join()).","code":""},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"tidyr","dir":"Articles","previous_headings":"Tidyverse","what":"Tidyr","title":"Data cleaning with Tidyverse","text":"pivot_wider, pivot_longer","code":""},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"stringr-janitor","dir":"Articles","previous_headings":"Tidyverse","what":"StringR, Janitor","title":"Data cleaning with Tidyverse","text":"functions clean data strings","code":""},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Data cleaning with Tidyverse","text":"","code":"data(\"flights\")  flights %>%   select(year, month, day) %>%   head() #> # A tibble: 6 × 3 #>    year month   day #>   <int> <int> <int> #> 1  2013     1     1 #> 2  2013     1     1 #> 3  2013     1     1 #> 4  2013     1     1 #> 5  2013     1     1 #> 6  2013     1     1   flights %>%   select(year:dep_time, ends_with(\"time\")) %>%   head() #> # A tibble: 6 × 8 #>    year month   day dep_time sched_dep_time arr_time sched_arr_time air_time #>   <int> <int> <int>    <int>          <int>    <int>          <int>    <dbl> #> 1  2013     1     1      517            515      830            819      227 #> 2  2013     1     1      533            529      850            830      227 #> 3  2013     1     1      542            540      923            850      160 #> 4  2013     1     1      544            545     1004           1022      183 #> 5  2013     1     1      554            600      812            837      116 #> 6  2013     1     1      554            558      740            728      150    flights %>%   select(year:dep_time, ends_with(\"time\")) %>%   arrange(desc(air_time)) %>%    head() #> # A tibble: 6 × 8 #>    year month   day dep_time sched_dep_time arr_time sched_arr_time air_time #>   <int> <int> <int>    <int>          <int>    <int>          <int>    <dbl> #> 1  2013     3    17     1337           1335     1937           1836      695 #> 2  2013     2     6      853            900     1542           1540      691 #> 3  2013     3    15     1001           1000     1551           1530      686 #> 4  2013     3    17     1006           1000     1607           1530      686 #> 5  2013     3    16     1001           1000     1544           1530      683 #> 6  2013     2     5      900            900     1555           1540      679 flights_sml <- flights %>%    head(n=100)  flights_sml %>%    filter(month==3 & year==2013) #> # A tibble: 0 × 19 #> # … with 19 variables: year <int>, month <int>, day <int>, dep_time <int>, #> #   sched_dep_time <int>, dep_delay <dbl>, arr_time <int>, #> #   sched_arr_time <int>, arr_delay <dbl>, carrier <chr>, flight <int>, #> #   tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, #> #   hour <dbl>, minute <dbl>, time_hour <dttm>  flights_sml %>%    select(year:dep_time) %>%    mutate(date=paste(year, month, day)) #> # A tibble: 100 × 5 #>     year month   day dep_time date     #>    <int> <int> <int>    <int> <chr>    #>  1  2013     1     1      517 2013 1 1 #>  2  2013     1     1      533 2013 1 1 #>  3  2013     1     1      542 2013 1 1 #>  4  2013     1     1      544 2013 1 1 #>  5  2013     1     1      554 2013 1 1 #>  6  2013     1     1      554 2013 1 1 #>  7  2013     1     1      555 2013 1 1 #>  8  2013     1     1      557 2013 1 1 #>  9  2013     1     1      557 2013 1 1 #> 10  2013     1     1      558 2013 1 1 #> # … with 90 more rows  try(flights_sml %>%    select(year:dep_time) %>%    mutate(speed=distance/air_time *60)) #> Error in mutate(., speed = distance/air_time * 60) :  #>   Problem while computing `speed = distance/air_time * 60`. #> Caused by error: #> ! object 'distance' not found   flights_sml %>%    select(distance, air_time) %>%    mutate(speed=distance/air_time *60) #> # A tibble: 100 × 3 #>    distance air_time speed #>       <dbl>    <dbl> <dbl> #>  1     1400      227  370. #>  2     1416      227  374. #>  3     1089      160  408. #>  4     1576      183  517. #>  5      762      116  394. #>  6      719      150  288. #>  7     1065      158  404. #>  8      229       53  259. #>  9      944      140  405. #> 10      733      138  319. #> # … with 90 more rows flights %>%    select(year:arr_delay) %>%   group_by(month) %>%    summarise(mean_delay=mean(arr_delay, na.rm=T), sd=sd(arr_delay, na.rm=T)) #> # A tibble: 12 × 3 #>    month mean_delay    sd #>    <int>      <dbl> <dbl> #>  1     1      6.13   40.4 #>  2     2      5.61   39.5 #>  3     3      5.81   44.1 #>  4     4     11.2    47.5 #>  5     5      3.52   44.2 #>  6     6     16.5    56.1 #>  7     7     16.7    57.1 #>  8     8      6.04   42.6 #>  9     9     -4.02   39.7 #> 10    10     -0.167  32.6 #> 11    11      0.461  31.4 #> 12    12     14.9    46.1  flights %>%    select(year:dest) %>%   group_by(month, dest) %>%    summarise(mean_delay=mean(arr_delay, na.rm=T), sd=sd(arr_delay, na.rm=T), count=n()) #> `summarise()` has grouped output by 'month'. You can override using the #> `.groups` argument. #> # A tibble: 1,113 × 5 #> # Groups:   month [12] #>    month dest  mean_delay    sd count #>    <int> <chr>      <dbl> <dbl> <int> #>  1     1 ALB        35.2   68.1    64 #>  2     1 ATL         4.15  34.2  1396 #>  3     1 AUS         8.72  48.6   169 #>  4     1 AVL        23.5   55.9     2 #>  5     1 BDL        11.0   51.2    37 #>  6     1 BHM        16.7   70.0    25 #>  7     1 BNA        12.7   47.0   399 #>  8     1 BOS        -2.54  28.6  1245 #>  9     1 BQN         2.65  30.0    93 #> 10     1 BTV         6.67  36.5   223 #> # … with 1,103 more rows"},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"pivot_wider-pivot_longer","dir":"Articles","previous_headings":"Examples","what":"pivot_wider, pivot_longer","title":"Data cleaning with Tidyverse","text":"Examples : Software carpentry","code":"library(gapminder)  gap_wide <- gapminder %>%    pivot_wider(names_from = year, values_from = c(pop, gdpPercap,lifeExp ))  gap_long <- gap_wide %>%   pivot_longer(     cols = c(-continent, -country),     names_to = \"obstype_year\", values_to = \"obs_values\"   ) %>%   separate(obstype_year, into = c('obs_type', 'year'), sep = \"_\")"},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"exercises","dir":"Articles","previous_headings":"","what":"Exercises","title":"Data cleaning with Tidyverse","text":"Let’s add variable ‘flights’ Air time hours carrier worst arrival delays carrier flights? arrange: flights per carrier, higher/lower arrival delay”","code":""},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning.html","id":"merging","dir":"Articles","previous_headings":"","what":"Merging","title":"Data cleaning with Tidyverse","text":"merge join_ Clean messy data tidyverse","code":"data(\"mtcars\")  mtcars1 <- mtcars[1:30,1:4] mtcars2 <- mtcars[3:32,5:8] mtcars1 <- rownames_to_column(mtcars1, var=\"model\")  mtcars1 <- mtcars1[c(1:30, 1),] library(lubridate) #>  #> Attaching package: 'lubridate' #> The following objects are masked from 'package:base': #>  #>     date, intersect, setdiff, union"},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning_solutions.html","id":"base-r-data-cleaning","dir":"Articles","previous_headings":"","what":"Base R data cleaning","title":"Data cleaning, solutions","text":"","code":"Sys.setlocale(\"LC_TIME\", \"English\") #> Warning in Sys.setlocale(\"LC_TIME\", \"English\"): OS reports request to set locale #> to \"English\" cannot be honored #> [1] \"\"  messy_data <- read.delim(\"../inst/extdata/messy_data.txt\", stringsAsFactors = F)  messy_data$Patient.id <- toupper(messy_data$Patient.id) messy_data$Patient.id <- gsub(\"TCGA \", \"TCGA_\", messy_data$Patient.id) messy_data <- messy_data[1:18,] messy_data <- messy_data[,colnames(messy_data)!=\"X\"]    summary(messy_data) #>   Patient.id             Age           Gender          Date.of.birth      #>  Length:18          Min.   : 6.00   Length:18          Length:18          #>  Class :character   1st Qu.:36.00   Class :character   Class :character   #>  Mode  :character   Median :46.00   Mode  :character   Mode  :character   #>                     Mean   :51.11                                         #>                     3rd Qu.:65.00                                         #>                     Max.   :96.00                                         #>                                                                           #>  Date.of.diagnosis  Date.of.surgery       Status             Survival     #>  Length:18          Length:18          Length:18          Min.   : 8.00   #>  Class :character   Class :character   Class :character   1st Qu.:28.00   #>  Mode  :character   Mode  :character   Mode  :character   Median :36.00   #>                                                           Mean   :38.29   #>                                                           3rd Qu.:53.00   #>                                                           Max.   :64.00   #>                                                           NA's   :1       #>      Censor       Time.of.death        Identifier    Classification     #>  Min.   :0.0000   Length:18          Min.   : 49.0   Length:18          #>  1st Qu.:0.0000   Class :character   1st Qu.:603.2   Class :character   #>  Median :0.0000   Mode  :character   Median :604.0   Mode  :character   #>  Mean   :0.4706                      Mean   :518.7                      #>  3rd Qu.:1.0000                      3rd Qu.:604.0                      #>  Max.   :1.0000                      Max.   :604.0                      #>  NA's   :1                                                              #>  Histological.subtype  enzyme.level         MUC1                T             #>  Length:18            Min.   :  0.090   Length:18          Length:18          #>  Class :character     1st Qu.:  0.135   Class :character   Class :character   #>  Mode  :character     Median :  0.240   Mode  :character   Mode  :character   #>                       Mean   : 38.213                                         #>                       3rd Qu.:  0.310                                         #>                       Max.   :684.000                                         #>                                                                               #>      TNM            #>  Length:18          #>  Class :character   #>  Mode  :character   #>                     #>                     #>                     #>  #help: https://www.stat.berkeley.edu/~s133/dates.html messy_data$Date.of.surgery <- as.Date(messy_data$Date.of.surgery, format=\"%d-%b-%y\") messy_data$Date.of.birth <- as.Date(as.Date( messy_data$Date.of.birth, format=\"%d/%m/%Y\")) messy_data$Date.of.diagnosis <- as.Date(messy_data$Date.of.diagnosis, format=\"%d/%m/%Y\") messy_data$Time.of.death <- as.Date(messy_data$Time.of.death, format=\"%d-%b-%y\")   Age <- difftime(messy_data$Date.of.diagnosis,messy_data$Date.of.birth, units = \"days\") Age <- round(Age/365, digits = 0) table(Age,messy_data$Age) #>      #> Age  6 16 26 33 36 42 45 46 56 62 66 76 86 90 96 #>   16 0  1  0  0  0  0  0  0  0  0  0  0  0  0  0 #>   26 0  0  1  0  0  0  0  0  0  0  0  0  0  0  0 #>   33 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0 #>   36 0  0  0  0  2  0  0  0  0  0  0  0  0  0  0 #>   42 0  0  0  0  0  1  0  0  0  0  0  0  0  0  0 #>   45 0  0  0  0  0  0  1  0  0  0  0  0  0  0  0 #>   46 0  0  0  0  0  0  0  2  0  0  0  0  0  0  0 #>   56 0  0  0  0  0  0  0  0  2  0  0  0  0  0  0 #>   62 0  0  0  0  0  0  0  0  0  1  0  0  0  0  0 #>   66 1  0  0  0  0  0  0  0  0  0  1  0  0  0  0 #>   76 0  0  0  0  0  0  0  0  0  0  0  1  0  0  0 #>   86 0  0  0  0  0  0  0  0  0  0  0  0  1  0  0 #>   90 0  0  0  0  0  0  0  0  0  0  0  0  0  1  0 #>   96 0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 messy_data$Age <- Age  messy_data$Gender #>  [1] \"m\" \"m\" \"m\" \"m\" \"m\" \"f\" \"f\" \"f\" \"f\" \"f\" \"f\" \"m\" \"m\" \"f\" \"f\" \"m\" \"f\" \"f\" messy_data$Status #>  [1] \"dead\"  \"alive\" \"alive\" \"alive\" \"dead\"  \"dead\"  \"alive\" \"dead\"  \"dead\"  #> [10] \"dead\"  \"alive\" \"alive\" \"alive\" \"alive\" \"dead\"  \"alive\" \"dead\"  \"dead\"  table(messy_data$Status, messy_data$Censor) #>         #>         0 1 #>   alive 9 0 #>   dead  0 8 messy_data$Identifier <- NULL messy_data$Classification <- NULL  summary(messy_data$enzyme.level) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   0.090   0.135   0.240  38.213   0.310 684.000 boxplot(messy_data$enzyme.level) messy_data$enzyme.level[messy_data$enzyme.level>600] <- NA boxplot(messy_data$enzyme.level) table(messy_data$Histological.subtype) #>  #>      invasive         MANEC      mucinous           NOS          NOS   #>             1             1             2             9             1  #> NOS/papillary     papillary  #>             3             1 messy_data$Histological.subtype <- gsub(\" \", \"\", messy_data$Histological.subtype) table(messy_data$Histological.subtype) #>  #>      invasive         MANEC      mucinous           NOS NOS/papillary  #>             1             1             2            10             3  #>     papillary  #>             1  table(messy_data$MUC1) #>  #>   ???     0 0bis1     1     2     3  #>     1    10     1     1     3     1  messy_data$MUC1 <- factor(messy_data$MUC1, levels = c(\"0\", \"0bis1\", \"1\", \"2\", \"3\")) messy_data$N <- gsub(\"(T[[:digit:]])(N[[:digit:]])(M[[:digit:]])\", \"\\\\2\", messy_data$TNM) messy_data$M <- gsub(\"(T[[:digit:]])(N[[:digit:]])(M[[:digit:]])\", \"\\\\3\", messy_data$TNM) messy_data$TNM <- NULL"},{"path":"https://tkik.github.io/BasicR/articles/data_cleaning_solutions.html","id":"data-cleaning-tidyverse","dir":"Articles","previous_headings":"","what":"Data cleaning, tidyverse","title":"Data cleaning, solutions","text":"","code":"library(tidyverse) #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── #> ✔ ggplot2 3.3.6     ✔ purrr   0.3.4 #> ✔ tibble  3.1.7     ✔ dplyr   1.0.9 #> ✔ tidyr   1.2.0     ✔ stringr 1.4.0 #> ✔ readr   2.1.2     ✔ forcats 0.5.1 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() library(readxl) library(janitor) #>  #> Attaching package: 'janitor' #> The following objects are masked from 'package:stats': #>  #>     chisq.test, fisher.test  messy_data <- read_excel(\"../inst/extdata/messy_data.xlsx\")  messy_data <- read_excel(\"../inst/extdata/messy_data.xlsx\", n_max = 18)  messy_data <- messy_data %>%    select_all(~gsub(\" \", \".\", .)) %>%   clean_names() %>%    remove_empty( which = c(\"rows\",\"cols\"))     messy_data <- messy_data %>%   mutate(patient_id=toupper(patient_id)) %>%   mutate(patient_id=gsub(\" \", \"_\", patient_id),           age=round(as.numeric((date_of_diagnosis-date_of_birth)/365), digits = 0),          N=substr(tnm, 3, 4),           M=substr(tnm, 5, 6),           tnm=NULL) %>%           mutate(enzyme_level=ifelse(enzyme_level>600, NA, enzyme_level))"},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises.html","id":"exercises-with-vectors","dir":"Articles","previous_headings":"","what":"Exercises with vectors","title":"Data types, exercises","text":"Create following vectors: 1, 1, 3, 4, 5 2, 2, 5, 4, 1 Find minimum vectors Find common minimum vectors Summarize vectors element-wise elements. 4 create element-wise squere root element-wise sum vectors. order vectors decreasing order find elements duplicated vectors. find element vector one vector 2. Create one vector 100 random numbers, 1 100, possibility repeat (hint: sample function) find , many elements equal three. - random numbers running set.seed(23) change elements equal three 4. check results. create named vectors two first vecotrs. Order second one first, based names (match) combine two vectors element vector two larger respective element vector 1? element vector two larger largest element vector 1?","code":""},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises.html","id":"exercises-with-data-frames","dir":"Articles","previous_headings":"","what":"Exercises with data frames","title":"Data types, exercises","text":"load iris dataset (data) exctract Petal.Lenght column vector. column name column index well. create data frame columns Sepal.Width, Sepal.Length Species colums. Get maximum Petal.Species setosa. Get second element Sepal.Width column many setosa Petal.Width 0.2","code":""},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises.html","id":"exercises-with-regular-expressions","dir":"Articles","previous_headings":"","what":"Exercises with regular expressions","title":"Data types, exercises","text":"Create column sample type (tumor normal) table treatment versus sample type add \"_\" sample names: sample_3 summarize values coming normal samples change “”s Sentrix.position column “E”s. change “E”s back “”s, appear second. generalized possible.","code":"dataset <- data.frame(Patient.ID=c(\"normal_01\", \"normal_02\", \"normal_03\", \"tumor_01\", \"tumor_02\", \"tumor_02\"),                        Sentrix.position=c(\"A01B01\", \"A01B02\", \"A016A01\", \"B02A02\", \"C01D02\", \"C02C01\"), Treatment=c(\"Treated\", \"Treated\", \"Not treated\", \"Treated\", \"Treated\", \"Not treated\"), value=c(3.25, 3.67, 4.26, 6.24, 5.78, 7.32), row.names = c(\"Sample1\", \"Sample2\", \"Sample3\", \"Sample4\", \"Sample5\", \"Sample6\"))  dataset ##         Patient.ID Sentrix.position   Treatment value ## Sample1  normal_01           A01B01     Treated  3.25 ## Sample2  normal_02           A01B02     Treated  3.67 ## Sample3  normal_03          A016A01 Not treated  4.26 ## Sample4   tumor_01           B02A02     Treated  6.24 ## Sample5   tumor_02           C01D02     Treated  5.78 ## Sample6   tumor_02           C02C01 Not treated  7.32"},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises.html","id":"exercises-with-factors","dir":"Articles","previous_headings":"","what":"Exercises with factors","title":"Data types, exercises","text":"check factors dataset. Turn sample type column factors. Add “unknown” level Order levels, first “tumor”. Order according mean value decreasing order.","code":""},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises.html","id":"lists","dir":"Articles","previous_headings":"","what":"Lists","title":"Data types, exercises","text":"Create list 5 elements, different class. Create list one vector, one list, one matrix one number. Name list elements. Access third element name. Delete second element list. Add data frame end list. Access 3rd row, 2nd column element data frame. Create list two elements, element two sublists.","code":""},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises_solutions.html","id":"exercises-with-vectors","dir":"Articles","previous_headings":"","what":"Exercises with vectors","title":"Data types, solutions","text":"Create following vectors: 1, 1, 3, 4, 5 2, 2, 5, 4, 1 Find minimum vectors Find common minimum vectors Summarize vectors element-wise elements. 4 create element-wise squere root element-wise sum vectors. order vectors decreasing order find elements duplicated vectors. find element vector one vector 2. Create one vector 100 random numbers, 1 100, possibility repeat (hint: sample function) find , many elements equal three. - random numbers running set.seed(23) change elements equal three 4. check results. create named vectors two first vectors. Order second one first, based names (match) combine two vectors element vector two larger respective element vector 1? element vector two larger largest element vector 1?","code":"#1. a <- c(1,1,3,4,5) b <- c(2, 2, 5, 4, 1) #2. min(a) ## [1] 1 min(b) ## [1] 1 #3. min(c(a,b)) ## [1] 1 min(a,b) ## [1] 1 #4. a+b ## [1] 3 3 8 8 6 sum(a+b) ## [1] 28 #5. sqrt(a+b) ## [1] 1.732051 1.732051 2.828427 2.828427 2.449490 #6.  sort(a, decreasing = T) ## [1] 5 4 3 1 1 sort(b, decreasing = T) ## [1] 5 4 2 2 1 #7  which(duplicated(a)) ## [1] 2 a[a==a[duplicated(a)]] ## [1] 1 1 #8 a <- sample(1:100, 100, replace = T) sum(a==3) ## [1] 0"},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises_solutions.html","id":"exercises-with-data-frames","dir":"Articles","previous_headings":"","what":"Exercises with data frames","title":"Data types, solutions","text":"load iris dataset (data) exctract Petal.Lenght column vector. column name column index well. create data frame columns Sepal.Width, Sepal.Length Species colums. Get maximum Petal.Species setosa. Get second element Sepal.Width column many setosa Petal.Width 0.2","code":"data(\"iris\") plength <- iris[,\"Petal.Length\"] plength <- iris[,3] iris$Petal.Length ##   [1] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 1.5 1.6 1.4 1.1 1.2 1.5 1.3 1.4 ##  [19] 1.7 1.5 1.7 1.5 1.0 1.7 1.9 1.6 1.6 1.5 1.4 1.6 1.6 1.5 1.5 1.4 1.5 1.2 ##  [37] 1.3 1.4 1.3 1.5 1.3 1.3 1.3 1.6 1.9 1.4 1.6 1.4 1.5 1.4 4.7 4.5 4.9 4.0 ##  [55] 4.6 4.5 4.7 3.3 4.6 3.9 3.5 4.2 4.0 4.7 3.6 4.4 4.5 4.1 4.5 3.9 4.8 4.0 ##  [73] 4.9 4.7 4.3 4.4 4.8 5.0 4.5 3.5 3.8 3.7 3.9 5.1 4.5 4.5 4.7 4.4 4.1 4.0 ##  [91] 4.4 4.6 4.0 3.3 4.2 4.2 4.2 4.3 3.0 4.1 6.0 5.1 5.9 5.6 5.8 6.6 4.5 6.3 ## [109] 5.8 6.1 5.1 5.3 5.5 5.0 5.1 5.3 5.5 6.7 6.9 5.0 5.7 4.9 6.7 4.9 5.7 6.0 ## [127] 4.8 4.9 5.6 5.8 6.1 6.4 5.6 5.1 5.6 6.1 5.6 5.5 4.8 5.4 5.6 5.1 5.1 5.9 ## [145] 5.7 5.2 5.0 5.2 5.4 5.1 new_df <- iris[,c(\"Sepal.Width\", \"Sepal.Length\", \"Species\")] new_df <- iris[,c(2,1,5)] max(iris[iris$Species==\"setosa\", \"Petal.Width\"]) ## [1] 0.6 iris[2, \"Sepal.Width\"] ## [1] 3 sum(iris[iris$Species==\"setosa\", \"Petal.Width\"]==0.2) ## [1] 29"},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises_solutions.html","id":"exercises-with-regular-expressions","dir":"Articles","previous_headings":"","what":"Exercises with regular expressions","title":"Data types, solutions","text":"Create column sample type (tumor normal) table treatment versus sample type add \"_\" sample names: sample_3 summarize values coming normal samples change “”s Sentrix.position column “E”s. change “E”s back “”s, appear second. generalized possible.","code":"dataset <- data.frame(Patient.ID=c(\"normal_01\", \"normal_02\", \"normal_03\", \"tumor_01\", \"tumor_02\", \"tumor_02\"),                        Sentrix.position=c(\"A01B01\", \"A01B02\", \"A016A01\", \"B02A02\", \"C01D02\", \"C02C01\"), Treatment=c(\"Treated\", \"Treated\", \"Not treated\", \"Treated\", \"Treated\", \"Not treated\"), value=c(3.25, 3.67, 4.26, 6.24, 5.78, 7.32), row.names = c(\"Sample1\", \"Sample2\", \"Sample3\", \"Sample4\", \"Sample5\", \"Sample6\")) #Examples: grep(\"normal\", dataset$Patient.ID) ## [1] 1 2 3 grep(\"norm\", dataset$Patient.ID) ## [1] 1 2 3 grep(\"nom\", dataset$Patient.ID) ## integer(0) grepl(\"normal\", dataset$Patient.ID) ## [1]  TRUE  TRUE  TRUE FALSE FALSE FALSE grepl(\"[[:alpha:]]\", dataset$Patient.ID) ## [1] TRUE TRUE TRUE TRUE TRUE TRUE grepl(\"[[:alpha:]]{5}\", dataset$Patient.ID) ## [1] TRUE TRUE TRUE TRUE TRUE TRUE grepl(\"[[:alpha:]]{6}\", dataset$Patient.ID) ## [1]  TRUE  TRUE  TRUE FALSE FALSE FALSE grepl(\"[[:alpha:]]_[[:digit:]]\", dataset$Patient.ID) ## [1] TRUE TRUE TRUE TRUE TRUE TRUE grepl(\"[[:alpha:]]{6}_[[:digit:]]{2}\", dataset$Patient.ID) ## [1]  TRUE  TRUE  TRUE FALSE FALSE FALSE regexec(\"[[:alpha:]]_[[:digit:]]\", dataset$Patient.ID) ## [[1]] ## [1] 6 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[2]] ## [1] 6 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[3]] ## [1] 6 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[4]] ## [1] 5 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[5]] ## [1] 5 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[6]] ## [1] 5 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE gregexpr(\"[[:alpha:]]_[[:digit:]]\", dataset$Patient.ID) ## [[1]] ## [1] 6 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[2]] ## [1] 6 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[3]] ## [1] 6 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[4]] ## [1] 5 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[5]] ## [1] 5 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE ##  ## [[6]] ## [1] 5 ## attr(,\"match.length\") ## [1] 3 ## attr(,\"index.type\") ## [1] \"chars\" ## attr(,\"useBytes\") ## [1] TRUE gsub(\"_\", \".\", dataset$Patient.ID) ## [1] \"normal.01\" \"normal.02\" \"normal.03\" \"tumor.01\"  \"tumor.02\"  \"tumor.02\" gsub(\".\", \"_\", dataset$Patient.ID) ## [1] \"_________\" \"_________\" \"_________\" \"________\"  \"________\"  \"________\" gsub(\"\\\\.\", \"_\", dataset$Patient.ID) ## [1] \"normal_01\" \"normal_02\" \"normal_03\" \"tumor_01\"  \"tumor_02\"  \"tumor_02\" gsub(\".\", \"_\", dataset$Patient.ID, fixed = T) ## [1] \"normal_01\" \"normal_02\" \"normal_03\" \"tumor_01\"  \"tumor_02\"  \"tumor_02\" gsub(\"([[:alpha:]]{5,6})_([[:digit:]]{2})\", \"\\\\2\", dataset$Patient.ID) ## [1] \"01\" \"02\" \"03\" \"01\" \"02\" \"02\" gsub(\"([[:alpha:]]{5,6})_([[:digit:]]{2})\", \"\\\\1\", dataset$Patient.ID) ## [1] \"normal\" \"normal\" \"normal\" \"tumor\"  \"tumor\"  \"tumor\" gsub(\"([A-Za-z]{5,6})_([[:digit:]]{2})\", \"\\\\1\", dataset$Patient.ID) ## [1] \"normal\" \"normal\" \"normal\" \"tumor\"  \"tumor\"  \"tumor\" dataset$Sample_type <- gsub(\"([A-Za-z]{5,6})_([[:digit:]]{2})\", \"\\\\1\", dataset$Patient.ID)  rownames(dataset) <- gsub(\"Sample\", \"Sample_\", rownames(dataset))"},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises_solutions.html","id":"exercises-with-factors","dir":"Articles","previous_headings":"","what":"Exercises with factors","title":"Data types, solutions","text":"check factors dataset. Turn sample type column factors. Add “unknown” level Order levels, first “tumor”. Order according mean value decreasing order.","code":"dataset$Sample_type <- ifelse(grepl(\"normal\", dataset$Patient.ID), \"normal\", \"tumor\") dataset$Sample_type <- factor(dataset$Sample_type, levels = c(\"normal\", \"tumor\")) dataset$Sample_type <- as.factor(dataset$Sample_type) dataset$Sample_type <- factor(dataset$Sample_type, levels=c(\"normal\", \"tumor\", \"unknown\")) dataset$Sample_type <- factor(dataset$Sample_type, levels=c(\"tumor\", \"normal\", \"unknown\"))"},{"path":"https://tkik.github.io/BasicR/articles/data_types_exercises_solutions.html","id":"lists","dir":"Articles","previous_headings":"","what":"Lists","title":"Data types, solutions","text":"Create list 5 elements, different class. Create list one vector, one list, one matrix one number. Name list elements. Access third element name. Delete second element list. Add data frame end list. Access 3rd row, 2nd column element data frame. Create list two elements, element two sublists.","code":"my_list <- list(\"a\", c(1,2), TRUE, factor(c(\"apple\", \"oranges\")), list(1,2))  my_list <- list(vec=c(1,2), ll=list(1,2,3), mat=matrix(1:9, nrow=3), num=3) my_list[[2]] <- NULL  my_list[[4]] <- data.frame(one=c(1,2), two=c(\"one\", \"two\"), stringsAsFactors = F)  my_list[[length(my_list)+1]] <- \"empty\""},{"path":"https://tkik.github.io/BasicR/articles/exercises_control_exercises.html","id":"if-else-statement","dir":"Articles","previous_headings":"","what":"If-else statement","title":"Control structures, exercises","text":"load Orange dataset Create new, empty variable Write loop iterate rows dataset Write else statement classifies trees based circumference: <= 65.5 – small >65.5 & <= 161.5 – medium >161.5 large ifelse() one step.","code":"data(\"Orange\")  Hmisc::describe(Orange) ## Orange  ##  ##  3  Variables      35  Observations ## -------------------------------------------------------------------------------- ## Tree  ##        n  missing distinct  ##       35        0        5  ##  ## lowest : 3 1 5 2 4, highest: 3 1 5 2 4 ##                                ## Value        3   1   5   2   4 ## Frequency    7   7   7   7   7 ## Proportion 0.2 0.2 0.2 0.2 0.2 ## -------------------------------------------------------------------------------- ## age  ##        n  missing distinct     Info     Mean      Gmd  ##       35        0        7     0.98    922.1      566  ##  ## lowest :  118  484  664 1004 1231, highest:  664 1004 1231 1372 1582 ##                                                      ## Value        118   484   664  1004  1231  1372  1582 ## Frequency      5     5     5     5     5     5     5 ## Proportion 0.143 0.143 0.143 0.143 0.143 0.143 0.143 ## -------------------------------------------------------------------------------- ## circumference  ##        n  missing distinct     Info     Mean      Gmd      .05      .10  ##       35        0       30    0.999    115.9    66.97     30.0     32.4  ##      .25      .50      .75      .90      .95  ##     65.5    115.0    161.5    193.4    204.8  ##  ## lowest :  30  32  33  49  51, highest: 177 179 203 209 214 ## --------------------------------------------------------------------------------"},{"path":"https://tkik.github.io/BasicR/articles/exercises_control_exercises.html","id":"for-while-loop","dir":"Articles","previous_headings":"","what":"For, while loop","title":"Control structures, exercises","text":"tree (1 5), print ages. tree, print age, small. load esoph dataset. Using loop(s), summarize ncontrols agegp alcgp, skipping category alcgp==“120+” & agegp==“25-34”. Using loop simulate flip coin twenty times, keeping track individual outcomes (1 = heads, 0 = tails) vector preallocte. Use loop investigate number terms required product 1234… reaches 10 million Use nested loop (loop inside loop) produces following matrix, preallocate matrix NA values.","code":""},{"path":"https://tkik.github.io/BasicR/articles/exercises_control_exercises.html","id":"apply-lapply-etc","dir":"Articles","previous_headings":"","what":"apply, lapply, etc…","title":"Control structures, exercises","text":"define following dataset: Calculate row column means apply Use apply multiply whole table 3. create list 3 list elements. Print length element.","code":"dataset1 <- cbind(observationA = 16:8, observationB = c(20:19, 6:12)) lll <- list(list(1,3,5,6,1), list(5,2,1), list(6,2,5,7,3,1,9))"},{"path":"https://tkik.github.io/BasicR/articles/exercises_control_solutions.html","id":"if-else-statement","dir":"Articles","previous_headings":"","what":"If-else statement","title":"Control structures, solutions","text":"load Orange dataset Create new, empty variable Write loop iterate rows dataset Write else statement classifies trees based circumference: <= 65.5 – small >65.5 & <= 161.5 – medium >161.5 large ifelse() one step.","code":"data(\"Orange\")  Hmisc::describe(Orange) ## Orange  ##  ##  3  Variables      35  Observations ## -------------------------------------------------------------------------------- ## Tree  ##        n  missing distinct  ##       35        0        5  ##  ## lowest : 3 1 5 2 4, highest: 3 1 5 2 4 ##                                ## Value        3   1   5   2   4 ## Frequency    7   7   7   7   7 ## Proportion 0.2 0.2 0.2 0.2 0.2 ## -------------------------------------------------------------------------------- ## age  ##        n  missing distinct     Info     Mean      Gmd  ##       35        0        7     0.98    922.1      566  ##  ## lowest :  118  484  664 1004 1231, highest:  664 1004 1231 1372 1582 ##                                                      ## Value        118   484   664  1004  1231  1372  1582 ## Frequency      5     5     5     5     5     5     5 ## Proportion 0.143 0.143 0.143 0.143 0.143 0.143 0.143 ## -------------------------------------------------------------------------------- ## circumference  ##        n  missing distinct     Info     Mean      Gmd      .05      .10  ##       35        0       30    0.999    115.9    66.97     30.0     32.4  ##      .25      .50      .75      .90      .95  ##     65.5    115.0    161.5    193.4    204.8  ##  ## lowest :  30  32  33  49  51, highest: 177 179 203 209 214 ## -------------------------------------------------------------------------------- Orange$cc <- NA #Orange$tree <- \"something else\"  for (i in 1:nrow(Orange)){   print(i) if (Orange$circumference[i] <= 65.5){   Orange$cc[i] <- \"small\" } else if (Orange$circumference[i]>65.5 & Orange$circumference[8]<=161.5){   Orange$cc[i] <- \"medium\" } else {   Orange$cc[i] <- \"large\" } } ## [1] 1 ## [1] 2 ## [1] 3 ## [1] 4 ## [1] 5 ## [1] 6 ## [1] 7 ## [1] 8 ## [1] 9 ## [1] 10 ## [1] 11 ## [1] 12 ## [1] 13 ## [1] 14 ## [1] 15 ## [1] 16 ## [1] 17 ## [1] 18 ## [1] 19 ## [1] 20 ## [1] 21 ## [1] 22 ## [1] 23 ## [1] 24 ## [1] 25 ## [1] 26 ## [1] 27 ## [1] 28 ## [1] 29 ## [1] 30 ## [1] 31 ## [1] 32 ## [1] 33 ## [1] 34 ## [1] 35 Orange$cc <- ifelse(Orange$circumference<=65.5, \"small\",                      ifelse(Orange$circumference<=161.5, \"medium\", \"large\"))"},{"path":"https://tkik.github.io/BasicR/articles/exercises_control_solutions.html","id":"for-while-loop","dir":"Articles","previous_headings":"","what":"For, while loop","title":"Control structures, solutions","text":"tree (1 5), print ages. tree, print age, small. load esoph dataset. Using loop(s), summarize ncontrols agegp alcgp, skipping category alcgp==“120+” & agegp==“25-34”. Using loop simulate flip coin twenty times, keeping track individual outcomes (1 = heads, 0 = tails) vector preallocte. Use loop investigate number terms required product 1234… reaches 10 million Use nested loop (loop inside loop) produces following matrix, preallocate matrix NA values.","code":"Orange[Orange$Tree==1,\"age\"] ## [1]  118  484  664 1004 1231 1372 1582 for (i in 1:5){   cat(\"Tree: \", i, \" Ages: \", paste0(Orange[Orange$Tree==i,\"age\"], collapse = \", \"), \"\\n\") } ## Tree:  1  Ages:  118, 484, 664, 1004, 1231, 1372, 1582  ## Tree:  2  Ages:  118, 484, 664, 1004, 1231, 1372, 1582  ## Tree:  3  Ages:  118, 484, 664, 1004, 1231, 1372, 1582  ## Tree:  4  Ages:  118, 484, 664, 1004, 1231, 1372, 1582  ## Tree:  5  Ages:  118, 484, 664, 1004, 1231, 1372, 1582 for (i in 1:5){   cat(\"Tree: \", i, \" was small at age: \", paste0(Orange[Orange$Tree==i & Orange$cc==\"small\",\"age\"], collapse = \", \"), \"\\n\") } ## Tree:  1  was small at age:  118, 484  ## Tree:  2  was small at age:  118  ## Tree:  3  was small at age:  118, 484  ## Tree:  4  was small at age:  118, 484  ## Tree:  5  was small at age:  118, 484 # 0     1     2     3     4 # 1     0     1     2     3 # 2     1     0     1     2 # 3     2     1     0     1 # 4     3     2     1     0 data(\"esoph\") for (agegrp in levels(esoph$agegp)){   print(sum(esoph$ncontrols[esoph$agegp==agegrp])) } ## [1] 115 ## [1] 190 ## [1] 167 ## [1] 166 ## [1] 106 ## [1] 31 for (agegrp in levels(esoph$agegp)){   for (alcgrp in levels(esoph$alcgp)){    #print(agegrp)     #print(alcgrp)   cat(\"Age group: \", agegrp, \", alcohol consumption group: \", alcgrp, \" number of controls: \", sum(esoph$ncontrols[esoph$alcgp==alcgrp & esoph$agegp==agegrp]), \"\\n\")   } } ## Age group:  25-34 , alcohol consumption group:  0-39g/day  number of controls:  61  ## Age group:  25-34 , alcohol consumption group:  40-79  number of controls:  45  ## Age group:  25-34 , alcohol consumption group:  80-119  number of controls:  5  ## Age group:  25-34 , alcohol consumption group:  120+  number of controls:  4  ## Age group:  35-44 , alcohol consumption group:  0-39g/day  number of controls:  88  ## Age group:  35-44 , alcohol consumption group:  40-79  number of controls:  76  ## Age group:  35-44 , alcohol consumption group:  80-119  number of controls:  20  ## Age group:  35-44 , alcohol consumption group:  120+  number of controls:  6  ## Age group:  45-54 , alcohol consumption group:  0-39g/day  number of controls:  77  ## Age group:  45-54 , alcohol consumption group:  40-79  number of controls:  61  ## Age group:  45-54 , alcohol consumption group:  80-119  number of controls:  27  ## Age group:  45-54 , alcohol consumption group:  120+  number of controls:  2  ## Age group:  55-64 , alcohol consumption group:  0-39g/day  number of controls:  77  ## Age group:  55-64 , alcohol consumption group:  40-79  number of controls:  62  ## Age group:  55-64 , alcohol consumption group:  80-119  number of controls:  19  ## Age group:  55-64 , alcohol consumption group:  120+  number of controls:  8  ## Age group:  65-74 , alcohol consumption group:  0-39g/day  number of controls:  60  ## Age group:  65-74 , alcohol consumption group:  40-79  number of controls:  28  ## Age group:  65-74 , alcohol consumption group:  80-119  number of controls:  16  ## Age group:  65-74 , alcohol consumption group:  120+  number of controls:  2  ## Age group:  75+ , alcohol consumption group:  0-39g/day  number of controls:  23  ## Age group:  75+ , alcohol consumption group:  40-79  number of controls:  8  ## Age group:  75+ , alcohol consumption group:  80-119  number of controls:  0  ## Age group:  75+ , alcohol consumption group:  120+  number of controls:  0 for (agegrp in levels(esoph$agegp)){   for (alcgrp in levels(esoph$alcgp)){     if (agegrp==\"25-34\" & alcgrp==\"120+\"){       #next     } else {   cat(\"Age group: \", agegrp, \", alcohol consumption group: \", alcgrp, \" number of controls: \", sum(esoph$ncontrols[esoph$alcgp==alcgrp & esoph$agegp==agegrp]), \"\\n\")}   } } ## Age group:  25-34 , alcohol consumption group:  0-39g/day  number of controls:  61  ## Age group:  25-34 , alcohol consumption group:  40-79  number of controls:  45  ## Age group:  25-34 , alcohol consumption group:  80-119  number of controls:  5  ## Age group:  35-44 , alcohol consumption group:  0-39g/day  number of controls:  88  ## Age group:  35-44 , alcohol consumption group:  40-79  number of controls:  76  ## Age group:  35-44 , alcohol consumption group:  80-119  number of controls:  20  ## Age group:  35-44 , alcohol consumption group:  120+  number of controls:  6  ## Age group:  45-54 , alcohol consumption group:  0-39g/day  number of controls:  77  ## Age group:  45-54 , alcohol consumption group:  40-79  number of controls:  61  ## Age group:  45-54 , alcohol consumption group:  80-119  number of controls:  27  ## Age group:  45-54 , alcohol consumption group:  120+  number of controls:  2  ## Age group:  55-64 , alcohol consumption group:  0-39g/day  number of controls:  77  ## Age group:  55-64 , alcohol consumption group:  40-79  number of controls:  62  ## Age group:  55-64 , alcohol consumption group:  80-119  number of controls:  19  ## Age group:  55-64 , alcohol consumption group:  120+  number of controls:  8  ## Age group:  65-74 , alcohol consumption group:  0-39g/day  number of controls:  60  ## Age group:  65-74 , alcohol consumption group:  40-79  number of controls:  28  ## Age group:  65-74 , alcohol consumption group:  80-119  number of controls:  16  ## Age group:  65-74 , alcohol consumption group:  120+  number of controls:  2  ## Age group:  75+ , alcohol consumption group:  0-39g/day  number of controls:  23  ## Age group:  75+ , alcohol consumption group:  40-79  number of controls:  8  ## Age group:  75+ , alcohol consumption group:  80-119  number of controls:  0  ## Age group:  75+ , alcohol consumption group:  120+  number of controls:  0"},{"path":"https://tkik.github.io/BasicR/articles/exercises_control_solutions.html","id":"apply-lapply-etc","dir":"Articles","previous_headings":"","what":"apply, lapply, etc…","title":"Control structures, solutions","text":"define following dataset: Calculate row column means apply Use apply multiply whole table 3. create list 3 list elements. Print length element.","code":"dataset1 <- cbind(observationA = 16:8, observationB = c(20:19, 6:12)) rowm <- apply(dataset1, 1, mean, na.rm=T) colm <- apply(dataset1, 2, mean, na.rm=T) #two ways  multiply <- function(x, number){   x <- x*number   x } res <- apply(dataset1,2, multiply, number=3)  res <- apply(dataset1,2, function(x) x*3) lll <- list(list(1,3,5,6,1), list(5,2,1), list(6,2,5,7,3,1,9)) lapply(lll, length) ## [[1]] ## [1] 5 ##  ## [[2]] ## [1] 3 ##  ## [[3]] ## [1] 7"},{"path":"https://tkik.github.io/BasicR/articles/ggplot2.html","id":"ggplot","dir":"Articles","previous_headings":"","what":"ggplot","title":"GGplot2","text":"Tutorial : https://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html#geometric_objects_and_aesthetics ggplot implements new grammar plotting. Uses building blocks create final plot: data aesthetic mapping geometric object statistical transformations scales coordinate system position adjustments faceting","code":"library(tidyr) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union library(readr) library(plotly) ## Loading required package: ggplot2 ##  ## Attaching package: 'plotly' ## The following object is masked from 'package:ggplot2': ##  ##     last_plot ## The following object is masked from 'package:stats': ##  ##     filter ## The following object is masked from 'package:graphics': ##  ##     layout housing <- read_csv(\"../inst/extdata/landdata-states.csv\") ## Rows: 7803 Columns: 11 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (2): State, region ## dbl (9): Date, Home.Value, Structure.Cost, Land.Value, Land.Share..Pct., Hom... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. library(ggplot2) ggplot(housing, aes(x = Home.Value)) +   geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. housing %>%  filter(State %in% c(\"MA\", \"TX\")) %>%  ggplot()+   geom_point(aes(x=Date,            y=Home.Value, color=State))+   geom_point(aes(x=Land.Value, y=Structure.Cost))"},{"path":"https://tkik.github.io/BasicR/articles/ggplot2.html","id":"aesthetics-and-geometric-objects","dir":"Articles","previous_headings":"ggplot","what":"Aesthetics and geometric objects","title":"GGplot2","text":"Aesthetic something one can see related dataset. Geometric objects give layout plot.  One plot can multpile geoms:   Different geoms can different aesthetics.   Aesthetics vs. assignments","code":"hp2001Q1 <- filter(housing, Date == 2001.25)  ggplot(hp2001Q1,        aes(y = Structure.Cost, x = Land.Value)) +   geom_point(aes(x=Date,            y=Home.Value)) p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))  p1 + geom_point(aes(color = Home.Value)) +   geom_smooth() ## `geom_smooth()` using method = 'loess' and formula 'y ~ x' p1 +   geom_point(aes(color = Home.Value)) +   geom_smooth(method = \"lm\") ## `geom_smooth()` using formula 'y ~ x' p1 +    geom_text(aes(label=State), size = 3) ## install.packages(\"ggrepel\")  library(\"ggrepel\") p1 +    geom_point() +    geom_text_repel(aes(label=State), size = 3) p1 +   geom_point(aes(size = 2),# incorrect! 2 is not a variable              color=\"red\") # this is fine -- all points red p1 +   geom_point(aes(color=Home.Value, shape = region)) ## Warning: Removed 1 rows containing missing values (geom_point). p2 <- ggplot(housing, aes(x = Home.Value)) p2 + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. p2 + geom_histogram(stat = \"bin\", binwidth=4000) housing.sum <- aggregate(housing[\"Home.Value\"], housing[\"State\"], FUN=mean) rbind(head(housing.sum), tail(housing.sum)) ##    State Home.Value ## 1     AK  147385.14 ## 2     AL   92545.22 ## 3     AR   82076.84 ## 4     AZ  140755.59 ## 5     CA  282808.08 ## 6     CO  158175.99 ## 46    VA  155391.44 ## 47    VT  132394.60 ## 48    WA  178522.58 ## 49    WI  108359.45 ## 50    WV   77161.71 ## 51    WY  122897.25 ggplot(housing.sum, aes(x=State, y=Home.Value)) +    geom_bar(stat=\"identity\")"},{"path":"https://tkik.github.io/BasicR/articles/ggplot2.html","id":"scale-modifications","dir":"Articles","previous_headings":"ggplot","what":"Scale modifications","title":"GGplot2","text":"","code":"p3 <- ggplot(housing,              aes(x = State,                  y = Home.Price.Index)) +          theme(legend.position=\"top\",               axis.text=element_text(size = 6)) p4 <- p3 + geom_point(aes(color = Date),                        alpha = 0.5,                        size = 1.5,                        position = position_jitter(width = 0.25, height = 0)) p4 + scale_x_discrete(name=\"State Abbreviation\") +   scale_color_continuous(name=\"\",                          breaks = c(1976, 1994, 2013),                          labels = c(\"'76\", \"'94\", \"'13\")) p4 +   scale_x_discrete(name=\"State Abbreviation\") +   scale_color_continuous(name=\"\",                          breaks = c(1976, 1994, 2013),                          labels = c(\"'76\", \"'94\", \"'13\"),                          type=\"viridis\") p4 +   scale_color_gradient2(name=\"\",                         breaks = c(1976, 1994, 2013),                         labels = c(\"'76\", \"'94\", \"'13\"),                         low = \"blue\",                         high = \"red\",                         mid = \"gray60\",                         midpoint = 1994)"},{"path":"https://tkik.github.io/BasicR/articles/ggplot2.html","id":"faceting","dir":"Articles","previous_headings":"ggplot","what":"Faceting","title":"GGplot2","text":"also facet_grid() function faceting two dimensions. ##Themes","code":"p5 <- housing %>%  filter(State %in% c(\"MA\", \"TX\")) %>%  ggplot(aes(x = Date, y = Home.Value)) p5 + geom_line(aes(color = State)) (p5 <- p5 + geom_line() +    facet_wrap(~State, ncol = 10)) p5 + theme_linedraw() p5 + theme_light()"},{"path":"https://tkik.github.io/BasicR/articles/ggplot2.html","id":"overriding-theme-defaults","dir":"Articles","previous_headings":"ggplot","what":"Overriding theme defaults","title":"GGplot2","text":"Specific theme elements can overridden using theme(). example:  theme options documented ?theme.","code":"p5 + theme_minimal() +   theme(text = element_text(color = \"turquoise\"))"},{"path":"https://tkik.github.io/BasicR/articles/ggplot2.html","id":"creating-and-saving-new-themes","dir":"Articles","previous_headings":"ggplot","what":"Creating and saving new themes","title":"GGplot2","text":"can create new themes, following example:","code":"theme_new <- theme_bw() +   theme(plot.background = element_rect(size = 1, color = \"blue\", fill = \"black\"),         text=element_text(size = 12, family = \"Serif\", color = \"ivory\"),         axis.text.y = element_text(colour = \"purple\"),         axis.text.x = element_text(colour = \"red\"),         panel.background = element_rect(fill = \"pink\"),         strip.background = element_rect(fill = \"orange\"))  p5 + theme_new library(tidyr) housing.byyear <- aggregate(cbind(Home.Value, Land.Value) ~ Date, data = housing, mean)  home.land.byyear <- gather(housing.byyear,                            value = \"value\",                            key = \"type\",                            Home.Value, Land.Value) ggplot(home.land.byyear,        aes(x=Date,            y=value,            color=type)) +   geom_line()"},{"path":"https://tkik.github.io/BasicR/articles/ggplot2.html","id":"exercises","dir":"Articles","previous_headings":"","what":"Exercises","title":"GGplot2","text":"Use iris dataset. plot dotplot using sepal.length sepal.width Color dots Species Add linear regression curve whole dataset Add linear regression curve colored species plot boxplots sepal length, one species, different color plot dots boxplot Change colors red, blue green. change axis labels 10 Flip coordinates Change theme theme_bw","code":"data(iris)"},{"path":"https://tkik.github.io/BasicR/articles/intro.html","id":"day-1-day-2","dir":"Articles","previous_headings":"","what":"Day 1 (Day 2? )","title":"Course introduction","text":"Data types Control structures Functions Debugging","code":""},{"path":"https://tkik.github.io/BasicR/articles/intro.html","id":"day-2","dir":"Articles","previous_headings":"","what":"Day 2","title":"Course introduction","text":"Data Import Tidying Cleaning Summarizing Visualization Descriptive Statistics","code":""},{"path":"https://tkik.github.io/BasicR/articles/intro.html","id":"day-3","dir":"Articles","previous_headings":"","what":"Day 3","title":"Course introduction","text":"Statistical modeling Interpretation","code":""},{"path":"https://tkik.github.io/BasicR/articles/intro.html","id":"day-4","dir":"Articles","previous_headings":"","what":"Day 4","title":"Course introduction","text":"GRanges SummarizedExperiment example data analysis (Gene expression)","code":""},{"path":"https://tkik.github.io/BasicR/articles/intro.html","id":"day-5","dir":"Articles","previous_headings":"","what":"Day 5","title":"Course introduction","text":"Reproducible research version control, git RMarkdown workflowr Good programming practice","code":""},{"path":"https://tkik.github.io/BasicR/articles/methylation_analysisRmd.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"DNA methylation","text":"Load data UCSC (IGV) browser visualize . Add additional tracks, like functional regions ENCODE, TFBSs, etc","code":"#Use the bed files from the tracks and tables folder # Check for the gene LIG4"},{"path":"https://tkik.github.io/BasicR/articles/methylation_analysisRmd.html","id":"location","dir":"Articles","previous_headings":"","what":"Location","title":"DNA methylation","text":"Annotate regions using annotatr package   Try different annotations Pathway enrichment analysis","code":"#file <- fread(file=\"data/diffMethTable_site_cmp1.csv\", sep = \",\")     #bg <- copy(file)   #bg <- bg[,.(Chromosome, Start, End=Start+1, cgid)]   #fwrite(bg, row.names=F, file = \"rnb_run_pilot/differential_methylation_data/background.txt\", quote = F, sep=\"\\t\",  col.names = F)  #hyper <- file[diffmeth.p.val<0.0001 & mean.diff>0.3,] #great_hyper <- hyper[,.(Chromosome, Start, End=Start+1, cgid)]  #hypo <- file[diffmeth.p.val<10e-14 & mean.diff< -0.7,] #great_hypo <- hypo[,.(Chromosome, Start, End=Start+1, cgid)]  #fwrite(file, row.names=F, file = paste0(folder, \"diffMethTable_significant01_cmp_\", i, \".txt\"), quote = F, sep=\"\\t\")  #fwrite(great_hyper, row.names=F, file = \"rnb_run_pilot/differential_methylation_data/great_significant_hyper.txt\", quote = F, sep=\"\\t\", col.names = F) #fwrite(great_hypo, row.names=F, file = \"rnb_run_pilot/differential_methylation_data/great_significant_hypo.txt\", quote = F, sep=\"\\t\", col.names = F)    data <- list() data[[\"hypo\"]]  <- import.bed(\"../inst/extdata/great_significant_hypo.txt\") data[[\"hyper\"]]<- import.bed(\"../inst/extdata/great_significant_hyper.txt\")   annots = c('hg19_Hepg2-chromatin') annots_gr = build_annotations(genome = 'hg19', annotations = annots) ## Building hmms... ## Downloading chromHMM track for Hepg2 for (dataset in data){ genome(dataset) <- rep(\"hg19\", length(genome(dataset))) result <- annotate_regions(dataset, annotations=annots_gr, minoverlap = 1L, ignore.strand = TRUE, quiet = FALSE) rnd_annots = annotate_regions(regions = randomize_regions(dataset),annotations = annots_gr,ignore.strand = TRUE) p_annots = plot_annotation(annotated_regions = result, annotated_random = rnd_annots) print(p_annots) } ## Annotating... ## Randomizing regions... ## Annotating... ## Annotating... ## Randomizing regions... ## Annotating... background <-  import.bed(\"../inst/extdata/background.txt\") genome(background) <- rep(\"hg19\", length(genome(background)))   for (dataset in names(data)){ genome(data[[dataset]]) <- rep(\"hg19\", length(genome(data[[dataset]]))) background2 <- background[sample(1:length(background), length(data[[dataset]])),] result <- annotate_regions(data[[dataset]], annotations=annots_gr, minoverlap = 1L, ignore.strand = TRUE, quiet = FALSE) rnd_annots = annotate_regions(regions = background2,annotations = annots_gr,ignore.strand = TRUE) p_annots = plot_annotation(annotated_regions = result, annotated_random = rnd_annots) print(p_annots+ggtitle(dataset)) } ## Annotating... ## Annotating... ## Annotating... ## Annotating... builtin_annotations() ##   [1] \"dm3_genes_1to5kb\"                      ##   [2] \"dm6_genes_1to5kb\"                      ##   [3] \"galGal5_genes_1to5kb\"                  ##   [4] \"hg19_genes_1to5kb\"                     ##   [5] \"hg38_genes_1to5kb\"                     ##   [6] \"mm9_genes_1to5kb\"                      ##   [7] \"mm10_genes_1to5kb\"                     ##   [8] \"rn4_genes_1to5kb\"                      ##   [9] \"rn5_genes_1to5kb\"                      ##  [10] \"rn6_genes_1to5kb\"                      ##  [11] \"dm3_genes_promoters\"                   ##  [12] \"dm6_genes_promoters\"                   ##  [13] \"galGal5_genes_promoters\"               ##  [14] \"hg19_genes_promoters\"                  ##  [15] \"hg38_genes_promoters\"                  ##  [16] \"mm9_genes_promoters\"                   ##  [17] \"mm10_genes_promoters\"                  ##  [18] \"rn4_genes_promoters\"                   ##  [19] \"rn5_genes_promoters\"                   ##  [20] \"rn6_genes_promoters\"                   ##  [21] \"dm3_genes_cds\"                         ##  [22] \"dm6_genes_cds\"                         ##  [23] \"galGal5_genes_cds\"                     ##  [24] \"hg19_genes_cds\"                        ##  [25] \"hg38_genes_cds\"                        ##  [26] \"mm9_genes_cds\"                         ##  [27] \"mm10_genes_cds\"                        ##  [28] \"rn4_genes_cds\"                         ##  [29] \"rn5_genes_cds\"                         ##  [30] \"rn6_genes_cds\"                         ##  [31] \"dm3_genes_5UTRs\"                       ##  [32] \"dm6_genes_5UTRs\"                       ##  [33] \"galGal5_genes_5UTRs\"                   ##  [34] \"hg19_genes_5UTRs\"                      ##  [35] \"hg38_genes_5UTRs\"                      ##  [36] \"mm9_genes_5UTRs\"                       ##  [37] \"mm10_genes_5UTRs\"                      ##  [38] \"rn4_genes_5UTRs\"                       ##  [39] \"rn5_genes_5UTRs\"                       ##  [40] \"rn6_genes_5UTRs\"                       ##  [41] \"dm3_genes_exons\"                       ##  [42] \"dm6_genes_exons\"                       ##  [43] \"galGal5_genes_exons\"                   ##  [44] \"hg19_genes_exons\"                      ##  [45] \"hg38_genes_exons\"                      ##  [46] \"mm9_genes_exons\"                       ##  [47] \"mm10_genes_exons\"                      ##  [48] \"rn4_genes_exons\"                       ##  [49] \"rn5_genes_exons\"                       ##  [50] \"rn6_genes_exons\"                       ##  [51] \"dm3_genes_firstexons\"                  ##  [52] \"dm6_genes_firstexons\"                  ##  [53] \"galGal5_genes_firstexons\"              ##  [54] \"hg19_genes_firstexons\"                 ##  [55] \"hg38_genes_firstexons\"                 ##  [56] \"mm9_genes_firstexons\"                  ##  [57] \"mm10_genes_firstexons\"                 ##  [58] \"rn4_genes_firstexons\"                  ##  [59] \"rn5_genes_firstexons\"                  ##  [60] \"rn6_genes_firstexons\"                  ##  [61] \"dm3_genes_introns\"                     ##  [62] \"dm6_genes_introns\"                     ##  [63] \"galGal5_genes_introns\"                 ##  [64] \"hg19_genes_introns\"                    ##  [65] \"hg38_genes_introns\"                    ##  [66] \"mm9_genes_introns\"                     ##  [67] \"mm10_genes_introns\"                    ##  [68] \"rn4_genes_introns\"                     ##  [69] \"rn5_genes_introns\"                     ##  [70] \"rn6_genes_introns\"                     ##  [71] \"dm3_genes_intronexonboundaries\"        ##  [72] \"dm6_genes_intronexonboundaries\"        ##  [73] \"galGal5_genes_intronexonboundaries\"    ##  [74] \"hg19_genes_intronexonboundaries\"       ##  [75] \"hg38_genes_intronexonboundaries\"       ##  [76] \"mm9_genes_intronexonboundaries\"        ##  [77] \"mm10_genes_intronexonboundaries\"       ##  [78] \"rn4_genes_intronexonboundaries\"        ##  [79] \"rn5_genes_intronexonboundaries\"        ##  [80] \"rn6_genes_intronexonboundaries\"        ##  [81] \"dm3_genes_exonintronboundaries\"        ##  [82] \"dm6_genes_exonintronboundaries\"        ##  [83] \"galGal5_genes_exonintronboundaries\"    ##  [84] \"hg19_genes_exonintronboundaries\"       ##  [85] \"hg38_genes_exonintronboundaries\"       ##  [86] \"mm9_genes_exonintronboundaries\"        ##  [87] \"mm10_genes_exonintronboundaries\"       ##  [88] \"rn4_genes_exonintronboundaries\"        ##  [89] \"rn5_genes_exonintronboundaries\"        ##  [90] \"rn6_genes_exonintronboundaries\"        ##  [91] \"dm3_genes_3UTRs\"                       ##  [92] \"dm6_genes_3UTRs\"                       ##  [93] \"galGal5_genes_3UTRs\"                   ##  [94] \"hg19_genes_3UTRs\"                      ##  [95] \"hg38_genes_3UTRs\"                      ##  [96] \"mm9_genes_3UTRs\"                       ##  [97] \"mm10_genes_3UTRs\"                      ##  [98] \"rn4_genes_3UTRs\"                       ##  [99] \"rn5_genes_3UTRs\"                       ## [100] \"rn6_genes_3UTRs\"                       ## [101] \"dm3_genes_intergenic\"                  ## [102] \"dm6_genes_intergenic\"                  ## [103] \"galGal5_genes_intergenic\"              ## [104] \"hg19_genes_intergenic\"                 ## [105] \"hg38_genes_intergenic\"                 ## [106] \"mm9_genes_intergenic\"                  ## [107] \"mm10_genes_intergenic\"                 ## [108] \"rn4_genes_intergenic\"                  ## [109] \"rn5_genes_intergenic\"                  ## [110] \"rn6_genes_intergenic\"                  ## [111] \"galGal5_cpg_islands\"                   ## [112] \"hg19_cpg_islands\"                      ## [113] \"hg38_cpg_islands\"                      ## [114] \"mm9_cpg_islands\"                       ## [115] \"mm10_cpg_islands\"                      ## [116] \"rn4_cpg_islands\"                       ## [117] \"rn5_cpg_islands\"                       ## [118] \"rn6_cpg_islands\"                       ## [119] \"galGal5_cpg_shores\"                    ## [120] \"hg19_cpg_shores\"                       ## [121] \"hg38_cpg_shores\"                       ## [122] \"mm9_cpg_shores\"                        ## [123] \"mm10_cpg_shores\"                       ## [124] \"rn4_cpg_shores\"                        ## [125] \"rn5_cpg_shores\"                        ## [126] \"rn6_cpg_shores\"                        ## [127] \"galGal5_cpg_shelves\"                   ## [128] \"hg19_cpg_shelves\"                      ## [129] \"hg38_cpg_shelves\"                      ## [130] \"mm9_cpg_shelves\"                       ## [131] \"mm10_cpg_shelves\"                      ## [132] \"rn4_cpg_shelves\"                       ## [133] \"rn5_cpg_shelves\"                       ## [134] \"rn6_cpg_shelves\"                       ## [135] \"galGal5_cpg_inter\"                     ## [136] \"hg19_cpg_inter\"                        ## [137] \"hg38_cpg_inter\"                        ## [138] \"mm9_cpg_inter\"                         ## [139] \"mm10_cpg_inter\"                        ## [140] \"rn4_cpg_inter\"                         ## [141] \"rn5_cpg_inter\"                         ## [142] \"rn6_cpg_inter\"                         ## [143] \"hg19_chromatin_Gm12878-ActivePromoter\" ## [144] \"hg19_chromatin_H1hesc-ActivePromoter\"  ## [145] \"hg19_chromatin_Hepg2-ActivePromoter\"   ## [146] \"hg19_chromatin_Hmec-ActivePromoter\"    ## [147] \"hg19_chromatin_Hsmm-ActivePromoter\"    ## [148] \"hg19_chromatin_Huvec-ActivePromoter\"   ## [149] \"hg19_chromatin_K562-ActivePromoter\"    ## [150] \"hg19_chromatin_Nhek-ActivePromoter\"    ## [151] \"hg19_chromatin_Nhlf-ActivePromoter\"    ## [152] \"hg19_chromatin_Gm12878-WeakPromoter\"   ## [153] \"hg19_chromatin_H1hesc-WeakPromoter\"    ## [154] \"hg19_chromatin_Hepg2-WeakPromoter\"     ## [155] \"hg19_chromatin_Hmec-WeakPromoter\"      ## [156] \"hg19_chromatin_Hsmm-WeakPromoter\"      ## [157] \"hg19_chromatin_Huvec-WeakPromoter\"     ## [158] \"hg19_chromatin_K562-WeakPromoter\"      ## [159] \"hg19_chromatin_Nhek-WeakPromoter\"      ## [160] \"hg19_chromatin_Nhlf-WeakPromoter\"      ## [161] \"hg19_chromatin_Gm12878-PoisedPromoter\" ## [162] \"hg19_chromatin_H1hesc-PoisedPromoter\"  ## [163] \"hg19_chromatin_Hepg2-PoisedPromoter\"   ## [164] \"hg19_chromatin_Hmec-PoisedPromoter\"    ## [165] \"hg19_chromatin_Hsmm-PoisedPromoter\"    ## [166] \"hg19_chromatin_Huvec-PoisedPromoter\"   ## [167] \"hg19_chromatin_K562-PoisedPromoter\"    ## [168] \"hg19_chromatin_Nhek-PoisedPromoter\"    ## [169] \"hg19_chromatin_Nhlf-PoisedPromoter\"    ## [170] \"hg19_chromatin_Gm12878-StrongEnhancer\" ## [171] \"hg19_chromatin_H1hesc-StrongEnhancer\"  ## [172] \"hg19_chromatin_Hepg2-StrongEnhancer\"   ## [173] \"hg19_chromatin_Hmec-StrongEnhancer\"    ## [174] \"hg19_chromatin_Hsmm-StrongEnhancer\"    ## [175] \"hg19_chromatin_Huvec-StrongEnhancer\"   ## [176] \"hg19_chromatin_K562-StrongEnhancer\"    ## [177] \"hg19_chromatin_Nhek-StrongEnhancer\"    ## [178] \"hg19_chromatin_Nhlf-StrongEnhancer\"    ## [179] \"hg19_chromatin_Gm12878-WeakEnhancer\"   ## [180] \"hg19_chromatin_H1hesc-WeakEnhancer\"    ## [181] \"hg19_chromatin_Hepg2-WeakEnhancer\"     ## [182] \"hg19_chromatin_Hmec-WeakEnhancer\"      ## [183] \"hg19_chromatin_Hsmm-WeakEnhancer\"      ## [184] \"hg19_chromatin_Huvec-WeakEnhancer\"     ## [185] \"hg19_chromatin_K562-WeakEnhancer\"      ## [186] \"hg19_chromatin_Nhek-WeakEnhancer\"      ## [187] \"hg19_chromatin_Nhlf-WeakEnhancer\"      ## [188] \"hg19_chromatin_Gm12878-Insulator\"      ## [189] \"hg19_chromatin_H1hesc-Insulator\"       ## [190] \"hg19_chromatin_Hepg2-Insulator\"        ## [191] \"hg19_chromatin_Hmec-Insulator\"         ## [192] \"hg19_chromatin_Hsmm-Insulator\"         ## [193] \"hg19_chromatin_Huvec-Insulator\"        ## [194] \"hg19_chromatin_K562-Insulator\"         ## [195] \"hg19_chromatin_Nhek-Insulator\"         ## [196] \"hg19_chromatin_Nhlf-Insulator\"         ## [197] \"hg19_chromatin_Gm12878-TxnTransition\"  ## [198] \"hg19_chromatin_H1hesc-TxnTransition\"   ## [199] \"hg19_chromatin_Hepg2-TxnTransition\"    ## [200] \"hg19_chromatin_Hmec-TxnTransition\"     ## [201] \"hg19_chromatin_Hsmm-TxnTransition\"     ## [202] \"hg19_chromatin_Huvec-TxnTransition\"    ## [203] \"hg19_chromatin_K562-TxnTransition\"     ## [204] \"hg19_chromatin_Nhek-TxnTransition\"     ## [205] \"hg19_chromatin_Nhlf-TxnTransition\"     ## [206] \"hg19_chromatin_Gm12878-TxnElongation\"  ## [207] \"hg19_chromatin_H1hesc-TxnElongation\"   ## [208] \"hg19_chromatin_Hepg2-TxnElongation\"    ## [209] \"hg19_chromatin_Hmec-TxnElongation\"     ## [210] \"hg19_chromatin_Hsmm-TxnElongation\"     ## [211] \"hg19_chromatin_Huvec-TxnElongation\"    ## [212] \"hg19_chromatin_K562-TxnElongation\"     ## [213] \"hg19_chromatin_Nhek-TxnElongation\"     ## [214] \"hg19_chromatin_Nhlf-TxnElongation\"     ## [215] \"hg19_chromatin_Gm12878-WeakTxn\"        ## [216] \"hg19_chromatin_H1hesc-WeakTxn\"         ## [217] \"hg19_chromatin_Hepg2-WeakTxn\"          ## [218] \"hg19_chromatin_Hmec-WeakTxn\"           ## [219] \"hg19_chromatin_Hsmm-WeakTxn\"           ## [220] \"hg19_chromatin_Huvec-WeakTxn\"          ## [221] \"hg19_chromatin_K562-WeakTxn\"           ## [222] \"hg19_chromatin_Nhek-WeakTxn\"           ## [223] \"hg19_chromatin_Nhlf-WeakTxn\"           ## [224] \"hg19_chromatin_Gm12878-Repressed\"      ## [225] \"hg19_chromatin_H1hesc-Repressed\"       ## [226] \"hg19_chromatin_Hepg2-Repressed\"        ## [227] \"hg19_chromatin_Hmec-Repressed\"         ## [228] \"hg19_chromatin_Hsmm-Repressed\"         ## [229] \"hg19_chromatin_Huvec-Repressed\"        ## [230] \"hg19_chromatin_K562-Repressed\"         ## [231] \"hg19_chromatin_Nhek-Repressed\"         ## [232] \"hg19_chromatin_Nhlf-Repressed\"         ## [233] \"hg19_chromatin_Gm12878-Heterochrom/lo\" ## [234] \"hg19_chromatin_H1hesc-Heterochrom/lo\"  ## [235] \"hg19_chromatin_Hepg2-Heterochrom/lo\"   ## [236] \"hg19_chromatin_Hmec-Heterochrom/lo\"    ## [237] \"hg19_chromatin_Hsmm-Heterochrom/lo\"    ## [238] \"hg19_chromatin_Huvec-Heterochrom/lo\"   ## [239] \"hg19_chromatin_K562-Heterochrom/lo\"    ## [240] \"hg19_chromatin_Nhek-Heterochrom/lo\"    ## [241] \"hg19_chromatin_Nhlf-Heterochrom/lo\"    ## [242] \"hg19_chromatin_Gm12878-Repetitive/CNV\" ## [243] \"hg19_chromatin_H1hesc-Repetitive/CNV\"  ## [244] \"hg19_chromatin_Hepg2-Repetitive/CNV\"   ## [245] \"hg19_chromatin_Hmec-Repetitive/CNV\"    ## [246] \"hg19_chromatin_Hsmm-Repetitive/CNV\"    ## [247] \"hg19_chromatin_Huvec-Repetitive/CNV\"   ## [248] \"hg19_chromatin_K562-Repetitive/CNV\"    ## [249] \"hg19_chromatin_Nhek-Repetitive/CNV\"    ## [250] \"hg19_chromatin_Nhlf-Repetitive/CNV\"    ## [251] \"hg19_enhancers_fantom\"                 ## [252] \"hg38_enhancers_fantom\"                 ## [253] \"mm9_enhancers_fantom\"                  ## [254] \"mm10_enhancers_fantom\"                 ## [255] \"hg19_lncrna_gencode\"                   ## [256] \"hg38_lncrna_gencode\"                   ## [257] \"mm10_lncrna_gencode\"                   ## [258] \"dm3_basicgenes\"                        ## [259] \"dm6_basicgenes\"                        ## [260] \"galGal5_basicgenes\"                    ## [261] \"hg19_basicgenes\"                       ## [262] \"hg38_basicgenes\"                       ## [263] \"mm9_basicgenes\"                        ## [264] \"mm10_basicgenes\"                       ## [265] \"rn4_basicgenes\"                        ## [266] \"rn5_basicgenes\"                        ## [267] \"rn6_basicgenes\"                        ## [268] \"galGal5_cpgs\"                          ## [269] \"hg19_cpgs\"                             ## [270] \"hg38_cpgs\"                             ## [271] \"mm9_cpgs\"                              ## [272] \"mm10_cpgs\"                             ## [273] \"rn4_cpgs\"                              ## [274] \"rn5_cpgs\"                              ## [275] \"rn6_cpgs\"                              ## [276] \"hg19_Gm12878-chromatin\"                ## [277] \"hg19_H1hesc-chromatin\"                 ## [278] \"hg19_Hepg2-chromatin\"                  ## [279] \"hg19_Hmec-chromatin\"                   ## [280] \"hg19_Hsmm-chromatin\"                   ## [281] \"hg19_Huvec-chromatin\"                  ## [282] \"hg19_K562-chromatin\"                   ## [283] \"hg19_Nhek-chromatin\"                   ## [284] \"hg19_Nhlf-chromatin\" library(TxDb.Hsapiens.UCSC.hg19.knownGene) txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene  for (dataset in names(data)){   genes <- seq2gene(data[[dataset]], tssRegion = c(-3000, 3000), flankDistance = 3000, TxDb=txdb)   kkm <- enrichKEGG(gene         = genes,                  organism     = 'human',                  pvalueCutoff = 0.05)       print(dotplot(kkm))      engo <- enrichGO(gene          = genes,                 OrgDb         = org.Hs.eg.db,                 ont           = \"BP\",                 pAdjustMethod = \"BH\",                 pvalueCutoff  = 0.01,                 qvalueCutoff  = 0.05,         readable      = TRUE)   print(dotplot(engo))      } ## Reading KEGG annotation online: ##  ## Reading KEGG annotation online:"},{"path":"https://tkik.github.io/BasicR/articles/r_functions.html","id":"funtions-in-r","dir":"Articles","previous_headings":"","what":"Funtions in R","title":"Functions, useful packages","text":"R function-oriented language. Basically every object manipulation done functions. possible data analysis using functions different packages, useful write functions well. main purpose avoid code repetition. rule thumb, need thing twice -> write function instead.","code":""},{"path":"https://tkik.github.io/BasicR/articles/r_functions.html","id":"general-syntax","dir":"Articles","previous_headings":"Funtions in R","what":"General syntax","title":"Functions, useful packages","text":"name: want actually run function arguments (optional) expressions - function return value (options)","code":"f <- function(){   cat(\"Hello world! \\n\") } f() ## Hello world! f <- function(num1, num2){   res <- num1+num2   res } f(1,2) ## [1] 3"},{"path":"https://tkik.github.io/BasicR/articles/r_functions.html","id":"return-value","dir":"Articles","previous_headings":"Funtions in R > General syntax","what":"Return value","title":"Functions, useful packages","text":"Returns last evaluated function Explicitly stated. case, evaluation function stops exits.","code":"f <- function(num1, num2){   res <- num1+num2   return(res)   cat(\"Hello world! \\n\") } f(1,2) ## [1] 3"},{"path":"https://tkik.github.io/BasicR/articles/r_functions.html","id":"arguments","dir":"Articles","previous_headings":"Funtions in R","what":"Arguments","title":"Functions, useful packages","text":"Named arguments Evaluation can position name-wise, even combination.","code":"f <- function(num1, num2){   print(num1)   print(num2) } f(1,2) ## [1] 1 ## [1] 2 f(num2=2, num1=1) ## [1] 1 ## [1] 2 f(2, num1=1) ## [1] 1 ## [1] 2 try(f(2)) ## [1] 2 ## Error in print(num2) : argument \"num2\" is missing, with no default"},{"path":"https://tkik.github.io/BasicR/articles/r_functions.html","id":"arguments-1","dir":"Articles","previous_headings":"Funtions in R > Arguments","what":"Arguments","title":"Functions, useful packages","text":"arguments can default values:","code":"f <- function(num1, num2=3){   print(num1)   #browser()   print(num2) } f(1,2) ## [1] 1 ## [1] 2 f(num2=2, num1=1) ## [1] 1 ## [1] 2 f(2) ## [1] 2 ## [1] 3"},{"path":"https://tkik.github.io/BasicR/articles/r_functions.html","id":"environment","dir":"Articles","previous_headings":"Funtions in R > Arguments","what":"Environment","title":"Functions, useful packages","text":"functions working environment. environment can’t seen outside. E.g. define variable within function, won’t available outside function. certain rules variables can seen inside function’s environment. Lexical scoping - searches environment function defined. ?","code":"g <- function(x) {           x*y } try(g(2)) ## Error in g(2) : object 'y' not found y <- 10 g(2) ## [1] 20 #but! x <- 1:10 try(mean()) ## Error in mean.default() : argument \"x\" is missing, with no default g <- function(x) {    ab <- 12          x*y } try(print(ab)) ## Error in print(ab) : object 'ab' not found ls(environment(g)) ## [1] \"f\" \"g\" \"x\" \"y\" #ls(environment(mean))  search() ##  [1] \".GlobalEnv\"        \"package:stats\"     \"package:graphics\"  ##  [4] \"package:grDevices\" \"package:utils\"     \"package:datasets\"  ##  [7] \"package:methods\"   \"Autoloads\"         \"tools:callr\"       ## [10] \"package:base\""},{"path":"https://tkik.github.io/BasicR/articles/r_functions.html","id":"troubleshooting","dir":"Articles","previous_headings":"Funtions in R","what":"Troubleshooting","title":"Functions, useful packages","text":"Due environment, can difficult goes wrong within function. Useful functions: traceback() browser() debug() options(error=recover) options(error=stop)","code":""},{"path":"https://tkik.github.io/BasicR/articles/references.html","id":"resources-used-in-the-course","dir":"Articles","previous_headings":"","what":"Resources used in the course","title":"References","text":"following resources used prepare slides exercises: LINK LINK LINK LINK big thank goes Sean Davis made possible use Orchestra platform. Orchestra platform supported NIH Artwork @allison_horst","code":""},{"path":"https://tkik.github.io/BasicR/articles/reproducible.html","id":"reproducible-programming","dir":"Articles","previous_headings":"","what":"Reproducible programming","title":"Reproducible programming","text":"“gives [code] safety [code] speed deserves neither.” (via)","code":""},{"path":"https://tkik.github.io/BasicR/articles/reproducible.html","id":"general-rules","dir":"Articles","previous_headings":"Reproducible programming","what":"General rules","title":"Reproducible programming","text":"scripts written way, either , someone else able run anytime. Clean structure, according best programming practices Variable names according convention (use _. \" \" -, don’t use keywords) <- instead = spaces Indentation curly brackets don’t store unnecessary objects avoid repetition comment codes detail Use sessionInfo() know package versions Use generalized code possible - use names regular expressions instead indices. possible, define paths beginning use paste() file.path() later. use relative paths try everything R, changes e.g. excel undocumented.","code":""},{"path":"https://tkik.github.io/BasicR/articles/reproducible.html","id":"use-version-control","dir":"Articles","previous_headings":"Reproducible programming","what":"Use version control","title":"Reproducible programming","text":"git easy tool version control.","code":""},{"path":"https://tkik.github.io/BasicR/articles/reproducible.html","id":"rmarkdown-r-notebooks","dir":"Articles","previous_headings":"Reproducible programming","what":"Rmarkdown, R notebooks","title":"Reproducible programming","text":"Rmarkdown document, code chuncks Markdown language easy learn, see cheatsheat many templates available - flexible themes Description, codes figures place. Figures saved separately well - use links Appearance code depends chunk options. Show code output  Show output  Show code , don’t run Suppress warnings messages, needed. Use cheatsheets easy add pictures, links, etc. easy add nice tables easy share collaborators","code":"plot(cars) plot(cars) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union data(\"mtcars\") knitr::kable(mtcars, format = \"html\") print(xtable::xtable(mtcars), type = 'html') mtcars %>%     DT::datatable(filter = 'top',            options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),             rownames = FALSE)"},{"path":"https://tkik.github.io/BasicR/articles/reproducible.html","id":"workflowr-package","dir":"Articles","previous_headings":"Reproducible programming","what":"workflowr package","title":"Reproducible programming","text":"steps automatically keeps nice folder structure easy use git","code":""},{"path":"https://tkik.github.io/BasicR/articles/reproducible.html","id":"exercises","dir":"Articles","previous_headings":"","what":"Exercises:","title":"Reproducible programming","text":"set git Rstudio set github account workflowr create new project using wflow_start() create new markdown file analysis folder, my_first_project load luad file extdata delete empty columns using cycle statements. modify days since birth appears years. google exact number days year. Create tables Diagnosis.Age, Sex, Race.Category American.Joint.Committee..Cancer.Tumor.Stage.Code chi-sq test American.Joint.Committee..Cancer.Tumor.Stage.Code Sex Plot data (e.g. barplot, counts gender) linear regression Mutation.Count Aneuploidy.Score, gender age. show results table. Plot data.","code":""},{"path":[]},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"clean-up-code","dir":"Articles","previous_headings":"Useful packages:","what":"Clean up code","title":"Resources","text":"formatR","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"update-r","dir":"Articles","previous_headings":"Useful packages:","what":"Update R","title":"Resources","text":"updateR","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"interactive-visualization","dir":"Articles","previous_headings":"Useful packages:","what":"Interactive visualization:","title":"Resources","text":"plotly ggplotly Glimma","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"nice-tables-in-rmarkdown","dir":"Articles","previous_headings":"Useful packages:","what":"nice tables in Rmarkdown","title":"Resources","text":"DT","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"enrichment-analysis","dir":"Articles","previous_headings":"Useful packages:","what":"Enrichment analysis","title":"Resources","text":"clusterProfiler","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"annotation-of-genomic-regions","dir":"Articles","previous_headings":"Useful packages:","what":"Annotation of genomic regions","title":"Resources","text":"annotatr","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"gene-expression-rnaseq-analysis","dir":"Articles","previous_headings":"Useful packages:","what":"Gene expression (RNASeq) analysis","title":"Resources","text":"DESeq2 EdgeR","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"mutation-data","dir":"Articles","previous_headings":"Useful packages:","what":"Mutation data","title":"Resources","text":"MAFtools","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"visualization-genomic-regions","dir":"Articles","previous_headings":"Useful packages:","what":"Visualization genomic regions","title":"Resources","text":"Gviz","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"handling-genomic-data-e-g--bam-files","dir":"Articles","previous_headings":"Useful packages:","what":"Handling genomic data (e.g. bam files)","title":"Resources","text":"rtracklayer","code":""},{"path":[]},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"array","dir":"Articles","previous_headings":"Useful packages: > Methylation data","what":"Array","title":"Resources","text":"minfi RnBeads","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"sequencing","dir":"Articles","previous_headings":"Useful packages: > Methylation data","what":"Sequencing","title":"Resources","text":"methrix bsseq","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"visualization-heatmaps","dir":"Articles","previous_headings":"Useful packages:","what":"Visualization, heatmaps","title":"Resources","text":"pheatmap Complexheatmap","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"circular-plots","dir":"Articles","previous_headings":"Useful packages:","what":"Circular plots","title":"Resources","text":"circlize","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"upset-plot","dir":"Articles","previous_headings":"Useful packages:","what":"Upset plot","title":"Resources","text":"upsetR","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"alluvial-plot","dir":"Articles","previous_headings":"Useful packages:","what":"Alluvial plot","title":"Resources","text":"ggalluvial","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"nice-colors-palettes","dir":"Articles","previous_headings":"Useful packages:","what":"Nice colors palettes","title":"Resources","text":"ggsci scico color palettes","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"cheatsheets","dir":"Articles","previous_headings":"Useful packages:","what":"Cheatsheets","title":"Resources","text":"Cheatsheets","code":""},{"path":"https://tkik.github.io/BasicR/articles/resources.html","id":"awesome-r","dir":"Articles","previous_headings":"Useful packages:","what":"Awesome R","title":"Resources","text":"Awesome","code":""},{"path":"https://tkik.github.io/BasicR/articles/set_up_git.html","id":"new-workflowr-project","dir":"Articles","previous_headings":"","what":"New workflowr project","title":"Set up git","text":"Normally, enough run wflowr_start: sets git configures still need add remote repository Create new directory run wflow_start, add directory set existing=T Try commit something Run git branch wflow switch branch Commit change git push -u class master","code":""},{"path":"https://tkik.github.io/BasicR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Reka Toth. Author, maintainer. Rajbir Nath Batra. Author.","code":""},{"path":"https://tkik.github.io/BasicR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Toth R, Batra R (2022). BasicR: Introductory course R. https://github.com/tkik/BasicR, https://tkik.github.io/BasicR/, https://compepigen.github.io/BasicR/.","code":"@Manual{,   title = {BasicR: Introductory course for R},   author = {Reka Toth and Rajbir Nath Batra},   year = {2022},   note = {https://github.com/tkik/BasicR, https://tkik.github.io/BasicR/, https://compepigen.github.io/BasicR/}, }"},{"path":"https://tkik.github.io/BasicR/reference/airway_small.html","id":null,"dir":"Reference","previous_headings":"","what":"A small example dataset for SummarizedExperiment — airway_small","title":"A small example dataset for SummarizedExperiment — airway_small","text":"small example dataset SummarizedExperiment","code":""},{"path":"https://tkik.github.io/BasicR/reference/airway_small.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A small example dataset for SummarizedExperiment — airway_small","text":"","code":"airway_small"},{"path":"https://tkik.github.io/BasicR/reference/airway_small.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A small example dataset for SummarizedExperiment — airway_small","text":"SummarizedExperiment 4001 rows","code":""},{"path":"https://tkik.github.io/BasicR/reference/airway_small.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A small example dataset for SummarizedExperiment — airway_small","text":"airway data","code":""}]
